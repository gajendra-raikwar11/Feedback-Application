<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Toastify CSS for notifications -->
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --accent-color: #e74c3c;
            --light-gray: #f4f6f9;
            --dark-gray: #343a40;
        }
        
        body {
            background-color: var(--light-gray);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .form-container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 2rem;
            margin-bottom: 2rem;
            width: 100%;
        }
        
        .form-header {
            border-bottom: 2px solid var(--primary-color);
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
        }
        
        .form-title {
            color: var(--secondary-color);
            font-weight: 600;
        }
        
        .form-metadata {
            background-color: var(--light-gray);
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }
        
        .section-card {
            border-left: 4px solid var(--primary-color);
            background-color: #fff;
            border-radius: 0 8px 8px 0;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .section-title {
            color: var(--secondary-color);
            font-weight: 600;
            border-bottom: 1px solid #eee;
            padding-bottom: 0.75rem;
            margin-bottom: 1rem;
        }
        
        .question-container {
            margin-bottom: 1.5rem;
            padding: 1rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .question-container:hover {
            background-color: var(--light-gray);
        }
        
        .required-star {
            color: var(--accent-color);
            margin-left: 5px;
        }
        
        .btn-submit {
            background-color: var(--primary-color);
            border: none;
            padding: 10px 25px;
            font-weight: 600;
            transition: all 0.3s;
        }
        
        .btn-submit:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .btn-cancel {
            background-color: #e0e0e0;
            color: var(--dark-gray);
            border: none;
            padding: 10px 25px;
            font-weight: 600;
            transition: all 0.3s;
        }
        
        .btn-cancel:hover {
            background-color: #c0c0c0;
        }
        
        .radio-option, .checkbox-option {
            margin-bottom: 0.5rem;
        }
        
        .form-control:focus, .form-check-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
        }
        
        .grid-question-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .grid-question-table th, .grid-question-table td {
            padding: 10px;
            border: 1px solid #dee2e6;
            text-align: center;
        }
        
        .grid-question-table th {
            background-color: var(--light-gray);
        }
        
        @media (max-width: 768px) {
            .container {
                padding-left: 10px;
                padding-right: 10px;
            }
            
            .form-container {
                padding: 1rem;
            }
            
            .metadata-item {
                flex-direction: column;
                margin-bottom: 0.5rem;
            }
            
            .metadata-label {
                margin-bottom: 0.25rem;
            }
            
            .grid-question-table {
                display: block;
                overflow-x: auto;
                width: 100%;
            }
            
            .section-card {
                padding: 1rem;
            }
            
            .question-container {
                padding: 0.75rem;
            }
            
            .btn-submit, .btn-cancel {
                width: 100%;
                margin-bottom: 0.5rem;
            }
            
            .d-flex.justify-content-end {
                flex-direction: column;
            }
            
            .btn {
                margin-right: 0 !important;
                margin-bottom: 0.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <div class="row justify-content-center">
            <div class="col-lg-10 col-md-12 col-sm-12">
                <!-- Toast container for notifications -->
                <div class="toast-container position-fixed top-0 end-0 p-3" id="toastContainer"></div>
                
                <div class="form-container shadow-sm p-4 mb-5 bg-white rounded">
                    <div class="form-header mb-4 pb-3 border-bottom">
                        <h2 class="form-title fw-bold"><%= form.title %></h2>
                        <p class="text-muted mb-0"><%= form.formType %> Feedback Form</p>
                    </div>
                    
                    <div class="form-metadata p-3 mb-4 bg-light rounded">
                        <div class="row">
                            <div class="col-md-4 col-sm-12 mb-2 mb-md-0">
                                <div class="metadata-item d-flex">
                                    <span class="metadata-label fw-semibold me-2"><i class="fas fa-user-tie me-2"></i>Faculty:</span>
                                    <span><%= facultyName || 'Assigned Faculty' %></span>
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12 mb-2 mb-md-0">
                                <div class="metadata-item d-flex">
                                    <span class="metadata-label fw-semibold me-2"><i class="fas fa-calendar-alt me-2"></i>Deadline:</span>
                                    <span data-deadline="<%= form.deadline %>"><%= new Date(form.deadline).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %></span>
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="metadata-item d-flex">
                                    <span class="metadata-label fw-semibold me-2"><i class="fas fa-book me-2"></i>Semester:</span>
                                    <span><%= form.commonSemester %></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <form id="feedbackForm" action="/student/submitFormResponse/<%= form._id %>" method="POST">
                        <!-- Form identification fields -->
                        <input type="hidden" name="formID" value="<%= form._id %>">
                        <input type="hidden" name="formTitle" value="<%= form.title %>">
                        <input type="hidden" name="formType" value="<%= form.formType %>">
                        <input type="hidden" name="studentID" value="<%= studentID %>">
                        <% if (facultyID) { %>
                            <input type="hidden" name="facultyID" value="<%= facultyID %>">
                          <% } %>                          
                        <input type="hidden" name="section" value="<%= section %>">
                        <input type="hidden" name="semester" value="<%= semester %>">
                        <input type="hidden" name="commonSemester" value="<%= commonSemester %>">
                        <input type="hidden" name="sectionCount" value="<%= form.sections ? form.sections.length : 0 %>">
                        
                        <% let globalQuestionIndex = 0; %>
                        <% if (form.sections && form.sections.length > 0) { %>
                            <% form.sections.forEach((section, sIndex) => { %>
                                <div class="section-card mb-4" data-section-id="<%= section._id %>" data-section-index="<%= sIndex %>">
                                    <h3 class="section-title mb-3"><%= section.title %></h3>
                                    <input type="hidden" name="sections[<%= sIndex %>][sectionID]" value="<%= section._id %>">
                                    <input type="hidden" name="sections[<%= sIndex %>][sectionTitle]" value="<%= section.title %>">
                                    
                                    <% if (section.description) { %>
                                        <p class="section-description text-muted mb-4"><%= section.description %></p>
                                    <% } %>
                                    
                                    <% if (section.questions && section.questions.length > 0) { %>
                                        <% section.questions.forEach((question, qIndex) => { %>
                                            <div class="question-container <%= qIndex % 2 === 0 ? 'bg-light' : 'bg-white' %> rounded border p-3 mb-3" 
                                                 data-question-id="<%= question._id %>" 
                                                 data-global-index="<%= globalQuestionIndex %>"
                                                 data-section-index="<%= sIndex %>"
                                                 data-question-type="<%= question.type %>">
                                                <h4 class="mb-3 fw-semibold fs-5">
                                                    <%= question.text %> 
                                                    <% if (question.required) { %>
                                                        <span class="required-star text-danger">*</span>
                                                    <% } %>
                                                </h4>
                                                
                                                <% if (question.description) { %>
                                                    <p class="question-description text-muted mb-3"><%= question.description %></p>
                                                <% } %>
                                                
                                                <!-- Store question metadata -->
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][questionID]" value="<%= question._id %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][questionText]" value="<%= question.text %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][sectionID]" value="<%= section._id %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][sectionTitle]" value="<%= section.title %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][sectionIndex]" value="<%= sIndex %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][questionType]" value="<%= question.type %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][questionIndex]" value="<%= qIndex %>">
                                                
                                                <div class="question-input mt-3">
                                                    <% if (question.type === 'text') { %>
                                                        <input type="text" 
                                                               name="answers[<%= globalQuestionIndex %>][responseText]" 
                                                               class="form-control" 
                                                               data-section-title="<%= section.title %>"
                                                               data-section-id="<%= section._id %>"
                                                               data-section-index="<%= sIndex %>"
                                                               <% if (question.required) { %>required<% } %>>
                                                               
                                                    <% } else if (question.type === 'textarea') { %>
                                                        <textarea name="answers[<%= globalQuestionIndex %>][responseText]" 
                                                                  class="form-control" 
                                                                  rows="4"
                                                                  data-section-title="<%= section.title %>"
                                                                  data-section-id="<%= section._id %>"
                                                                  data-section-index="<%= sIndex %>"
                                                                  <% if (question.required) { %>required<% } %>></textarea>
                                                               
                                                    <% } else if (question.type === 'rating') { %>
                                                        <div class="rating-container d-flex flex-wrap align-items-center justify-content-start gap-3 my-2">
                                                            <% if (question.options && question.options.length > 0) { %>
                                                                <% question.options.forEach((option, i) => { %>
                                                                    <div class="rating-option form-check">
                                                                        <input type="radio" 
                                                                               class="form-check-input" 
                                                                               id="rating-<%= section._id %>-<%= question._id %>-<%= i %>" 
                                                                               name="answers[<%= globalQuestionIndex %>][responseRating]" 
                                                                               value="<%= option %>"
                                                                               data-section-title="<%= section.title %>"
                                                                               data-section-id="<%= section._id %>"
                                                                               data-section-index="<%= sIndex %>"
                                                                               data-numeric-value="<%= ['Poor', 'Average', 'Good', 'Very Good', 'Excellent'].indexOf(option) + 1 %>"
                                                                               <% if (question.required) { %>required<% } %>>
                                                                        <label class="form-check-label" 
                                                                               for="rating-<%= section._id %>-<%= question._id %>-<%= i %>"><%= option %></label>
                                                                    </div>
                                                                <% }); %>
                                                            <% } else { %>
                                                                <!-- Default 1-5 rating if no options provided -->
                                                                <% for (let i = 1; i <= 5; i++) { %>
                                                                    <div class="rating-option form-check">
                                                                        <input type="radio" 
                                                                               class="form-check-input" 
                                                                               id="rating-<%= section._id %>-<%= question._id %>-<%= i %>" 
                                                                               name="answers[<%= globalQuestionIndex %>][responseRating]" 
                                                                               value="<%= i %>"
                                                                               data-section-title="<%= section.title %>"
                                                                               data-section-id="<%= section._id %>"
                                                                               data-section-index="<%= sIndex %>"
                                                                               data-numeric-value="<%= i %>"
                                                                               <% if (question.required) { %>required<% } %>>
                                                                        <label class="form-check-label" 
                                                                               for="rating-<%= section._id %>-<%= question._id %>-<%= i %>"><%= i %></label>
                                                                    </div>
                                                                <% } %>
                                                            <% } %>
                                                        </div>
                                                        
                                                    <% } else if (question.type === 'yes_no') { %>
                                                        <div class="yes-no-container d-flex flex-wrap gap-4 my-2">
                                                            <div class="option form-check">
                                                                <input type="radio" 
                                                                       class="form-check-input" 
                                                                       id="yes-<%= section._id %>-<%= question._id %>" 
                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                       value="<%= question.yesNoLabels?.yes || 'Yes' %>"
                                                                       data-section-title="<%= section.title %>"
                                                                       data-section-id="<%= section._id %>"
                                                                       data-section-index="<%= sIndex %>"
                                                                       data-numeric-value="1"
                                                                       <% if (question.required) { %>required<% } %>>
                                                                <label class="form-check-label" 
                                                                       for="yes-<%= section._id %>-<%= question._id %>">
                                                                    <%= question.yesNoLabels?.yes || 'Yes' %>
                                                                </label>
                                                            </div>
                                                            <div class="option form-check">
                                                                <input type="radio" 
                                                                       class="form-check-input" 
                                                                       id="no-<%= section._id %>-<%= question._id %>" 
                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                       value="<%= question.yesNoLabels?.no || 'No' %>"
                                                                       data-section-title="<%= section.title %>"
                                                                       data-section-id="<%= section._id %>"
                                                                       data-section-index="<%= sIndex %>"
                                                                       data-numeric-value="0"
                                                                       <% if (question.required) { %>required<% } %>>
                                                                <label class="form-check-label" 
                                                                       for="no-<%= section._id %>-<%= question._id %>">
                                                                    <%= question.yesNoLabels?.no || 'No' %>
                                                                </label>
                                                            </div>
                                                            <div class="option form-check">
                                                                <input type="radio" 
                                                                       class="form-check-input" 
                                                                       id="no-opinion-<%= section._id %>-<%= question._id %>" 
                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                       value="No Opinion"
                                                                       data-section-title="<%= section.title %>"
                                                                       data-section-id="<%= section._id %>"
                                                                       data-section-index="<%= sIndex %>"
                                                                       data-numeric-value="">
                                                                <label class="form-check-label" 
                                                                       for="no-opinion-<%= section._id %>-<%= question._id %>">No Opinion</label>
                                                            </div>
                                                        </div>
                                                        
                                                    <% } else if (question.type === 'mcq' || question.type === 'radio') { %>
                                                        <div class="mcq-container my-2">
                                                            <% if (question.options && Array.isArray(question.options)) { %>
                                                                <div class="row">
                                                                    <% question.options.forEach((option, index) => { %>
                                                                        <div class="col-md-6 col-sm-12 mb-2">
                                                                            <div class="option form-check">
                                                                                <input type="radio" 
                                                                                       class="form-check-input" 
                                                                                       id="mcq-<%= section._id %>-<%= question._id %>-<%= index %>" 
                                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                                       value="<%= option %>"
                                                                                       data-section-title="<%= section.title %>"
                                                                                       data-section-id="<%= section._id %>"
                                                                                       data-section-index="<%= sIndex %>"
                                                                                       <% if (question.required) { %>required<% } %>>
                                                                                <label class="form-check-label" 
                                                                                       for="mcq-<%= section._id %>-<%= question._id %>-<%= index %>"><%= option %></label>
                                                                            </div>
                                                                        </div>
                                                                    <% }); %>
                                                                </div>
                                                            <% } %>
                                                        </div>
                                                        
                                                    <% } else if (question.type === 'checkbox') { %>
                                                        <div class="checkbox-container my-2">
                                                            <% if (question.options && Array.isArray(question.options)) { %>
                                                                <div class="row">
                                                                    <% question.options.forEach((option, index) => { %>
                                                                        <div class="col-md-6 col-sm-12 mb-2">
                                                                            <div class="option form-check">
                                                                                <input type="checkbox" 
                                                                                       class="form-check-input" 
                                                                                       id="checkbox-<%= section._id %>-<%= question._id %>-<%= index %>" 
                                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions][]" 
                                                                                       value="<%= option %>"
                                                                                       data-section-title="<%= section.title %>"
                                                                                       data-section-id="<%= section._id %>"
                                                                                       data-section-index="<%= sIndex %>">
                                                                                <label class="form-check-label" 
                                                                                       for="checkbox-<%= section._id %>-<%= question._id %>-<%= index %>"><%= option %></label>
                                                                            </div>
                                                                        </div>
                                                                    <% }); %>
                                                                </div>
                                                            <% } %>
                                                        </div>
                                                        
                                                    <% } else if (question.type === 'dropdown') { %>
                                                        <select name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                class="form-select"
                                                                data-section-title="<%= section.title %>"
                                                                data-section-id="<%= section._id %>"
                                                                data-section-index="<%= sIndex %>"
                                                                <% if (question.required) { %>required<% } %>>
                                                            <option value="">Select an option</option>
                                                            <% if (question.options && Array.isArray(question.options)) { %>
                                                                <% question.options.forEach(option => { %>
                                                                    <option value="<%= option %>"><%= option %></option>
                                                                <% }); %>
                                                            <% } %>
                                                        </select>
                                                        
                                                    <% } else if (question.type === 'date') { %>
                                                        <input type="date" 
                                                               name="answers[<%= globalQuestionIndex %>][responseDate]" 
                                                               class="form-control"
                                                               data-section-title="<%= section.title %>"
                                                               data-section-id="<%= section._id %>"
                                                               data-section-index="<%= sIndex %>"
                                                               <% if (question.dateFormat) { %>data-date-format="<%= question.dateFormat %>"<% } %>
                                                               <% if (question.required) { %>required<% } %>>
                                                                
                                                    <% } else if (question.type === 'grid') { %>
                                                        <div class="table-responsive">
                                                            <table class="grid-question-table table table-bordered" data-grid-id="<%= question._id %>">
                                                                <thead class="table-light">
                                                                    <tr>
                                                                        <th></th>
                                                                        <% if (question.gridOptions && Array.isArray(question.gridOptions.columns)) { %>
                                                                            <% question.gridOptions.columns.forEach(column => { %>
                                                                                <th class="text-center"><%= column %></th>
                                                                            <% }); %>
                                                                        <% } %>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <% if (question.gridOptions && Array.isArray(question.gridOptions.rows)) { %>
                                                                        <% question.gridOptions.rows.forEach(row => { %>
                                                                            <tr>
                                                                                <td class="fw-semibold"><%= row %></td>
                                                                                <% if (question.gridOptions && Array.isArray(question.gridOptions.columns)) { %>
                                                                                    <% question.gridOptions.columns.forEach((column, colIndex) => { %>
                                                                                        <td class="text-center">
                                                                                            <input type="radio" 
                                                                                                   class="form-check-input" 
                                                                                                   name="answers[<%= globalQuestionIndex %>][gridResponses][<%= row %>]" 
                                                                                                   value="<%= column %>"
                                                                                                   data-section-title="<%= section.title %>"
                                                                                                   data-section-id="<%= section._id %>"
                                                                                                   data-section-index="<%= sIndex %>"
                                                                                                   data-row="<%= row %>"
                                                                                                   <% if (question.required) { %>required<% } %>>
                                                                                        </td>
                                                                                    <% }); %>
                                                                                <% } %>
                                                                            </tr>
                                                                        <% }); %>
                                                                    <% } %>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                        <input type="hidden" name="answers[<%= globalQuestionIndex %>][responseText]" id="grid-data-<%= section._id %>-<%= question._id %>">
                                                        
                                                    <% } else { %>
                                                        <!-- Default to text input if type is not recognized -->
                                                        <input type="text" 
                                                               name="answers[<%= globalQuestionIndex %>][responseText]" 
                                                               class="form-control"
                                                               data-section-title="<%= section.title %>"
                                                               data-section-id="<%= section._id %>"
                                                               data-section-index="<%= sIndex %>"
                                                               <% if (question.required) { %>required<% } %>>
                                                    <% } %>
                                                </div>
                                            </div>
                                            <% globalQuestionIndex++; %>
                                        <% }); %>
                                    <% } %>
                                </div>
                            <% }); %>
                        <% } %>
                        
                        <!-- Section summary (will be populated dynamically) -->
                        <div class="section-summary mb-4 p-3 border rounded bg-light">
                            <h4 class="mb-3">Response Summary</h4>
                            <div id="sectionSummaries"></div>
                            <div class="total-summary mt-3 pt-3 border-top">
                                <div class="d-flex justify-content-between">
                                    <strong>Total Questions:</strong>
                                    <span id="totalQuestions">0</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <strong>Questions Answered:</strong>
                                    <span id="questionsAnswered">0</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <strong>Completion Rate:</strong>
                                    <span id="completionRate">0%</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <strong>Estimated Average Rating:</strong>
                                    <span id="estimatedAverage">N/A</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-end mt-4 mb-2">
                            <a href="/student/studentFormsPage" class="btn btn-outline-secondary me-2">
                                <i class="fas fa-times me-1"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary btn-submit">
                                <i class="fas fa-paper-plane me-1"></i> Submit Response
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Toastify JS -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
          // Show toast function
          const showToast = (message, type) => {
              const backgroundColor = type === 'error' ? '#e74c3c' : 
                                      type === 'success' ? '#2ecc71' : 
                                      type === 'warning' ? '#f39c12' : '#3498db';
              
              Toastify({
                  text: message,
                  duration: 3000,
                  close: true,
                  gravity: "top",
                  position: "right", 
                  backgroundColor: backgroundColor,
                  stopOnFocus: true
              }).showToast();
          };
          
          // Display flash messages if they exist
          if (typeof messages !== 'undefined') {
              if (messages.error) {
                  messages.error.forEach(function(message) {
                      showToast(message, 'error');
                  });
              }
              if (messages.success) {
                  messages.success.forEach(function(message) {
                      showToast(message, 'success');
                  });
              }
          }
          
          if (typeof successMessage !== 'undefined' && successMessage) {
              showToast(successMessage, 'success');
          }
          
          // Form validation and submission handling
          const form = document.getElementById('feedbackForm');
          if (form) {
              // Create a response tracker to store all form responses
              const formResponses = {};
              
              // Create section data tracker
              const sectionData = {};
              
              // Helper function to convert text responses to numeric values
              // Implementation from provided code
              function convertResponseToNumeric(responseText, questionType) {
                // Skip processing if response is empty
                if (!responseText && responseText !== 0) {
                  return null;
                }
                
                // If responseText is already a number, return it directly
                if (!isNaN(responseText) && responseText !== '') {
                  return Number(responseText);
                }
                
                // For scale: Poor, Average, Good, Very Good, Excellent, No Opinion
                const ratingMap = {
                  "Poor": 1,
                  "Average": 2,
                  "Good": 3,
                  "Very Good": 4,
                  "Excellent": 5,
                  "No Opinion": null
                };

                // For Yes/No: No, Yes, No Opinion
                const yesNoMap = {
                  "No": 0,
                  "Yes": 1,
                  "No Opinion": null
                };

                // For weight scale: Just right, Too light, Too Heavy, No Opinion
                const weightMap = {
                  "Just right": 2,
                  "Too light": 1,
                  "Too Heavy": 3,
                  "No Opinion": null
                };

                // For satisfaction scale: Very Good, Good, Fair, Satisfactory, Unsatisfied
                const satisfactionMap = {
                  "Very Good": 5,
                  "Good": 4,
                  "Fair": 3,
                  "Satisfactory": 2,
                  "Unsatisfied": 1,
                  "No Opinion": null
                };
                
                // For agreement scale: Strongly Agree, Agree, Neutral, Disagree, Strongly Disagree
                const agreementMap = {
                  "Strongly Agree": 5,
                  "Agree": 4,
                  "Neutral": 3,
                  "Disagree": 2,
                  "Strongly Disagree": 1,
                  "No Opinion": null
                };
                
                // For frequency scale: Always, Frequently, Sometimes, Rarely, Never
                const frequencyMap = {
                  "Always": 5,
                  "Frequently": 4,
                  "Sometimes": 3,
                  "Rarely": 2,
                  "Never": 1,
                  "No Opinion": null
                };

                // Handle different question types
                switch (questionType) {
                  case "rating":
                    return ratingMap[responseText] !== undefined ? ratingMap[responseText] : Number(responseText) || null;
                    
                  case "yes_no":
                    return yesNoMap[responseText] !== undefined ? yesNoMap[responseText] : null;
                    
                  case "mcq":
                  case "radio":
                  case "dropdown":
                    // Try to match with any of the scales
                    const allMaps = [
                      ratingMap, 
                      yesNoMap, 
                      weightMap, 
                      satisfactionMap, 
                      agreementMap, 
                      frequencyMap
                    ];
                    
                    for (const map of allMaps) {
                      if (map[responseText] !== undefined) {
                        return map[responseText];
                      }
                    }
                    break;
                    
                  case "grid":
                    // Try to extract numeric value from grid response
                    if (typeof responseText === 'string') {
                      const numMatch = responseText.match(/\d+/);
                      if (numMatch) {
                        return Number(numMatch[0]);
                      }
                      
                      // Try to match with keyword patterns
                      const lowerText = responseText.toLowerCase();
                      
                      if (lowerText.includes('excellent') || lowerText.includes('strongly agree') || 
                          lowerText.includes('very good') || lowerText.includes('always')) {
                        return 5;
                      } else if (lowerText.includes('good') || lowerText.includes('agree') && 
                                !lowerText.includes('disagree') && !lowerText.includes('strongly')) {
                        return 4;
                      } else if (lowerText.includes('neutral') || lowerText.includes('fair') || 
                                lowerText.includes('sometimes')) {
                        return 3;
                      } else if (lowerText.includes('poor') || lowerText.includes('disagree') && 
                                !lowerText.includes('strongly') || lowerText.includes('rarely')) {
                        return 2;
                     // Continuing from where the code was cut off
                    } else if (lowerText.includes('poor') || lowerText.includes('disagree') && 
                                !lowerText.includes('strongly') || lowerText.includes('rarely')) {
                        return 2;
                      } else if (lowerText.includes('very poor') || lowerText.includes('strongly disagree') || 
                                lowerText.includes('unsatisfied') || lowerText.includes('never')) {
                        return 1;
                      }
                    }
                    break;
                }
                
                // If no match found but looks like a number, try parsing it
                if (typeof responseText === 'string' && /^\d+(\.\d+)?$/.test(responseText)) {
                  return Number(responseText);
                }
                
                // Return null if no numeric value could be determined
                return null;
              }
              
              // Function to update summary statistics
              function updateSummaryStatistics() {
                // Get all questions and count
                const totalQuestions = document.querySelectorAll('.question-container').length;
                
                // Count answered questions
                let answeredQuestions = 0;
                let totalRatingValue = 0;
                let totalRatedQuestions = 0;
                
                // Process each section
                Object.keys(sectionData).forEach(sectionId => {
                  const section = sectionData[sectionId];
                  let sectionAnswered = 0;
                  let sectionTotal = section.questions.length;
                  let sectionRatingTotal = 0;
                  let sectionRatedQuestions = 0;
                  
                  // Process each question in the section
                  section.questions.forEach(question => {
                    if (question.answered) {
                      sectionAnswered++;
                      answeredQuestions++;
                      
                      // If the question has a numeric value, add it to the average calculation
                      if (question.numericValue !== null && question.numericValue !== undefined) {
                        sectionRatingTotal += question.numericValue;
                        sectionRatedQuestions++;
                        
                        totalRatingValue += question.numericValue;
                        totalRatedQuestions++;
                      }
                    }
                  });
                  
                  // Calculate section completion percentage
                  const sectionCompletionPercentage = sectionTotal > 0 ? Math.round((sectionAnswered / sectionTotal) * 100) : 0;
                  
                  // Update section summary in the UI
                  const sectionSummaries = document.getElementById('sectionSummaries');
                  let sectionSummaryElement = document.getElementById(`section-summary-${sectionId}`);
                  
                  if (!sectionSummaryElement) {
                    sectionSummaryElement = document.createElement('div');
                    sectionSummaryElement.id = `section-summary-${sectionId}`;
                    sectionSummaryElement.className = 'section-summary-item mb-2';
                    sectionSummaries.appendChild(sectionSummaryElement);
                  }
                  
                  // Calculate section average rating
                  const sectionAverage = sectionRatedQuestions > 0 ? 
                    (sectionRatingTotal / sectionRatedQuestions).toFixed(1) : 'N/A';
                  
                  sectionSummaryElement.innerHTML = `
                    <div class="d-flex justify-content-between align-items-center">
                      <span>${section.title}</span>
                      <span class="badge bg-${sectionCompletionPercentage === 100 ? 'success' : 
                        sectionCompletionPercentage > 50 ? 'primary' : 'warning'}">
                        ${sectionAnswered}/${sectionTotal} (${sectionCompletionPercentage}%)
                      </span>
                    </div>
                    <div class="progress mb-1" style="height: 8px;">
                      <div class="progress-bar bg-${sectionCompletionPercentage === 100 ? 'success' : 
                        sectionCompletionPercentage > 50 ? 'primary' : 'warning'}" 
                        role="progressbar" style="width: ${sectionCompletionPercentage}%" 
                        aria-valuenow="${sectionCompletionPercentage}" aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                    <div class="small text-muted text-end">Avg. Rating: ${sectionAverage}</div>
                  `;
                });
                
                // Update total statistics
                const completionPercentage = totalQuestions > 0 ? Math.round((answeredQuestions / totalQuestions) * 100) : 0;
                const averageRating = totalRatedQuestions > 0 ? (totalRatingValue / totalRatedQuestions).toFixed(1) : 'N/A';
                
                document.getElementById('totalQuestions').textContent = totalQuestions;
                document.getElementById('questionsAnswered').textContent = answeredQuestions;
                document.getElementById('completionRate').textContent = `${completionPercentage}%`;
                document.getElementById('estimatedAverage').textContent = averageRating;
              }
              
              // Initialize section data from the DOM
              document.querySelectorAll('.section-card').forEach(sectionElement => {
                const sectionId = sectionElement.dataset.sectionId;
                const sectionIndex = sectionElement.dataset.sectionIndex;
                const sectionTitle = sectionElement.querySelector('.section-title').textContent;
                
                sectionData[sectionId] = {
                  id: sectionId,
                  index: sectionIndex,
                  title: sectionTitle,
                  questions: []
                };
                
                // Initialize questions for this section
                sectionElement.querySelectorAll('.question-container').forEach(questionElement => {
                  const questionId = questionElement.dataset.questionId;
                  const questionType = questionElement.dataset.questionType;
                  const questionText = questionElement.querySelector('h4').childNodes[0].textContent.trim();
                  
                  sectionData[sectionId].questions.push({
                    id: questionId,
                    type: questionType,
                    text: questionText,
                    answered: false,
                    value: null,
                    numericValue: null
                  });
                });
              });
              
              // Add event listeners to track form inputs
              document.querySelectorAll('input, textarea, select').forEach(input => {
                if (input.type === 'hidden') return;
                
                const sectionId = input.dataset.sectionId;
                if (!sectionId) return;
                
                const questionContainer = input.closest('.question-container');
                if (!questionContainer) return;
                
                const questionId = questionContainer.dataset.questionId;
                const questionType = questionContainer.dataset.questionType;
                const globalIndex = questionContainer.dataset.globalIndex;
                
                // Handle different input types
                const updateQuestionStatus = () => {
                  // Find the question in section data
                  const section = sectionData[sectionId];
                  if (!section) return;
                  
                  const question = section.questions.find(q => q.id === questionId);
                  if (!question) return;
                  
                  let value = null;
                  let answered = false;
                  
                  // Get value based on input type
                  switch (input.type) {
                    case 'text':
                    case 'textarea':
                    case 'date':
                      value = input.value.trim();
                      answered = value !== '';
                      break;
                      
                    case 'radio':
                      if (input.checked) {
                        value = input.value;
                        answered = true;
                      }
                      break;
                      
                    case 'checkbox':
                      // For checkboxes, we need to collect all checked values in the question
                      const checkedInputs = questionContainer.querySelectorAll('input[type="checkbox"]:checked');
                      if (checkedInputs.length > 0) {
                        value = Array.from(checkedInputs).map(cb => cb.value).join(', ');
                        answered = true;
                      }
                      break;
                      
                    case 'select-one':
                      value = input.value;
                      answered = value !== '';
                      break;
                  }
                  
                  // Update question status
                  if (answered) {
                    question.answered = true;
                    question.value = value;
                    
                    // Try to get numeric value for statistics
                    if (input.dataset.numericValue) {
                      question.numericValue = parseFloat(input.dataset.numericValue);
                    } else {
                      question.numericValue = convertResponseToNumeric(value, questionType);
                    }
                  } else {
                    // If checking a single input that's not answered, we need to check if any other inputs for this question are answered
                    const allInputs = questionContainer.querySelectorAll('input:not([type="hidden"]), textarea, select');
                    const anyAnswered = Array.from(allInputs).some(inp => {
                      if (inp.type === 'radio' || inp.type === 'checkbox') {
                        return inp.checked;
                      } else {
                        return inp.value.trim() !== '';
                      }
                    });
                    
                    question.answered = anyAnswered;
                    if (!anyAnswered) {
                      question.value = null;
                      question.numericValue = null;
                    }
                  }
                  
                  // Update statistics
                  updateSummaryStatistics();
                };
                
                // Add appropriate event listeners based on input type
                if (input.type === 'radio' || input.type === 'checkbox') {
                  input.addEventListener('change', updateQuestionStatus);
                } else {
                  input.addEventListener('input', updateQuestionStatus);
                  input.addEventListener('change', updateQuestionStatus);
                }
              });
              
              // Handle form submission
              form.addEventListener('submit', function(e) {
                e.preventDefault();
                
                // Check for required fields that are not filled
                const requiredInputs = form.querySelectorAll('[required]');
                let allFilled = true;
                
                requiredInputs.forEach(input => {
                  if (input.type === 'radio') {
                    // For radio buttons, check if any in the group is selected
                    const name = input.name;
                    const radioGroup = form.querySelectorAll(`input[type="radio"][name="${name}"]`);
                    const isChecked = Array.from(radioGroup).some(radio => radio.checked);
                    
                    if (!isChecked) {
                      allFilled = false;
                      // Find the question container and highlight it
                      const questionContainer = input.closest('.question-container');
                      if (questionContainer) {
                        questionContainer.classList.add('border-danger');
                      }
                    }
                  } else if (input.type === 'checkbox' && input.required) {
                    // For checkboxes, simply check if it's checked
                    if (!input.checked) {
                      allFilled = false;
                      const questionContainer = input.closest('.question-container');
                      if (questionContainer) {
                        questionContainer.classList.add('border-danger');
                      }
                    }
                  } else {
                    // For other input types
                    if (!input.value.trim()) {
                      allFilled = false;
                      input.classList.add('border-danger');
                      const questionContainer = input.closest('.question-container');
                      if (questionContainer) {
                        questionContainer.classList.add('border-danger');
                      }
                    }
                  }
                });
                
                if (!allFilled) {
                  showToast('Please complete all required questions before submitting.', 'error');
                  // Scroll to the first incomplete required question
                  const firstIncomplete = form.querySelector('.border-danger');
                  if (firstIncomplete) {
                    firstIncomplete.scrollIntoView({ behavior: 'smooth', block: 'center' });
                  }
                  return;
                }
                
                // If all required fields are filled, prepare grid data before submitting
                document.querySelectorAll('.grid-question-table').forEach(table => {
                  const gridId = table.dataset.gridId;
                  const gridData = {};
                  
                  // Collect grid responses
                  table.querySelectorAll('input[type="radio"]:checked').forEach(input => {
                    const row = input.dataset.row;
                    const column = input.value;
                    
                    if (row) {
                      gridData[row] = column;
                    }
                  });
                  
                  // Store grid data in hidden field
                  const hiddenInput = document.getElementById(`grid-data-${gridId}`);
                  if (hiddenInput) {
                    hiddenInput.value = JSON.stringify(gridData);
                  }
                });
                
                // Show loading state
                const submitButton = form.querySelector('.btn-submit');
                const originalButtonText = submitButton.innerHTML;
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Submitting...';
                
                // Submit the form
                form.submit();
              });
              
              function handleFormSubmissionResponse(response) {
  const submitButton = document.querySelector('.btn-submit');
  const originalButtonText = submitButton.innerHTML;
  
  // Change the button text and background color
  submitButton.innerHTML = 'Submitted';
  submitButton.style.backgroundColor = 'red-500';
  submitButton.style.color = 'white';
  submitButton.disabled = true;
  
  // You can add more logic here to handle the response, such as showing a success message
  showToast('Form submitted successfully!', 'success');
}
              // Initialize summary statistics on page load
              updateSummaryStatistics();
              
              // Check deadline
              const deadlineElement = document.querySelector('[data-deadline]');
              if (deadlineElement) {
                const deadline = new Date(deadlineElement.dataset.deadline);
                const now = new Date();
                
                if (now > deadline) {
                  showToast('Warning: The deadline for this form has passed.', 'warning');
                } else {
                  const daysLeft = Math.ceil((deadline - now) / (1000 * 60 * 60 * 24));
                  if (daysLeft <= 3) {
                    showToast(`Only ${daysLeft} day${daysLeft !== 1 ? 's' : ''} left until the deadline!`, 'warning');
                  }
                }
              }
          }
      });
    </script>
</body>