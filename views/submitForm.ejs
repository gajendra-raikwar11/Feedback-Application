<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Toastify CSS for notifications -->
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --secondary-color: #2c3e50;
            --accent-color: #e74c3c;
            --light-gray: #f4f6f9;
            --dark-gray: #343a40;
        }
        
        body {
            background-color: var(--light-gray);
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .form-container {
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 20px rgba(0, 0, 0, 0.1);
            padding: 2rem;
            margin-bottom: 2rem;
            width: 100%;
        }
        
        .form-header {
            border-bottom: 2px solid var(--primary-color);
            margin-bottom: 1.5rem;
            padding-bottom: 1rem;
        }
        
        .form-title {
            color: var(--secondary-color);
            font-weight: 600;
        }
        
        .form-metadata {
            background-color: var(--light-gray);
            border-radius: 8px;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }
        
        .section-card {
            border-left: 4px solid var(--primary-color);
            background-color: #fff;
            border-radius: 0 8px 8px 0;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        }
        
        .section-title {
            color: var(--secondary-color);
            font-weight: 600;
            border-bottom: 1px solid #eee;
            padding-bottom: 0.75rem;
            margin-bottom: 1rem;
        }
        
        .question-container {
            margin-bottom: 1.5rem;
            padding: 1rem;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        
        .question-container:hover {
            background-color: var(--light-gray);
        }
        
        .required-star {
            color: var(--accent-color);
            margin-left: 5px;
        }
        
        .btn-submit {
            background-color: var(--primary-color);
            border: none;
            padding: 10px 25px;
            font-weight: 600;
            transition: all 0.3s;
        }
        
        .btn-submit:hover {
            background-color: #2980b9;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        
        .btn-cancel {
            background-color: #e0e0e0;
            color: var(--dark-gray);
            border: none;
            padding: 10px 25px;
            font-weight: 600;
            transition: all 0.3s;
        }
        
        .btn-cancel:hover {
            background-color: #c0c0c0;
        }
        
        .radio-option, .checkbox-option {
            margin-bottom: 0.5rem;
        }
        
        .form-control:focus, .form-check-input:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.25rem rgba(52, 152, 219, 0.25);
        }
        
        .grid-question-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .grid-question-table th, .grid-question-table td {
            padding: 10px;
            border: 1px solid #dee2e6;
            text-align: center;
        }
        
        .grid-question-table th {
            background-color: var(--light-gray);
        }
        
        @media (max-width: 768px) {
            .container {
                padding-left: 10px;
                padding-right: 10px;
            }
            
            .form-container {
                padding: 1rem;
            }
            
            .metadata-item {
                flex-direction: column;
                margin-bottom: 0.5rem;
            }
            
            .metadata-label {
                margin-bottom: 0.25rem;
            }
            
            .grid-question-table {
                display: block;
                overflow-x: auto;
                width: 100%;
            }
            
            .section-card {
                padding: 1rem;
            }
            
            .question-container {
                padding: 0.75rem;
            }
            
            .btn-submit, .btn-cancel {
                width: 100%;
                margin-bottom: 0.5rem;
            }
            
            .d-flex.justify-content-end {
                flex-direction: column;
            }
            
            .btn {
                margin-right: 0 !important;
                margin-bottom: 0.5rem;
            }
        }
    </style>
</head>
<body> 
    <div class="container-fluid py-4">
        <div class="row justify-content-center">
            <div class="col-lg-10 col-md-12 col-sm-12">
                <!-- Toast container for notifications -->
                <div class="toast-container position-fixed top-0 end-0 p-3" id="toastContainer"></div>
                
                <div class="form-container shadow-sm p-4 mb-5 bg-white rounded">
                    <div class="form-header mb-4 pb-3 border-bottom">
                        <h2 class="form-title fw-bold"><%= form.title %></h2>
                        <p class="text-muted mb-0"><%= form.formType %> Feedback Form</p>
                    </div>
                    
                    <div class="form-metadata p-3 mb-4 bg-light rounded">
                        <div class="row">
                            <div class="col-md-4 col-sm-12 mb-2 mb-md-0">
                                <div class="metadata-item d-flex">
                                    <span class="metadata-label fw-semibold me-2"><i class="fas fa-user-tie me-2"></i>Faculty:</span>
                                    <span><%= facultyName || 'Assigned Faculty' %></span>
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12 mb-2 mb-md-0">
                                <div class="metadata-item d-flex">
                                    <span class="metadata-label fw-semibold me-2"><i class="fas fa-calendar-alt me-2"></i>Deadline:</span>
                                    <span data-deadline="<%= form.deadline %>"><%= new Date(form.deadline).toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %></span>
                                </div>
                            </div>
                            <div class="col-md-4 col-sm-12">
                                <div class="metadata-item d-flex">
                                    <span class="metadata-label fw-semibold me-2"><i class="fas fa-book me-2"></i>Semester:</span>
                                    <span><%= form.commonSemester %></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <form id="feedbackForm" action="/student/submitFormResponse/<%= form._id %>" method="POST">
                        <!-- Form identification fields -->
                        <input type="hidden" name="formID" value="<%= form._id %>">
                        <input type="hidden" name="formTitle" value="<%= form.title %>">
                        <input type="hidden" name="formType" value="<%= form.formType %>">
                        <input type="hidden" name="studentID" value="<%= studentID %>">
                        <% if (form.facultyID) { %>
                        <input type="hidden" name="facultyID" value="<%= form.facultyID %>">
                        <% } %>
                        <input type="hidden" name="section" value="<%= section %>">
                        <input type="hidden" name="semester" value="<%= semester %>">
                        <input type="hidden" name="commonSemester" value="<%= form.commonSemester %>">
                        <input type="hidden" name="sectionCount" value="<%= form.sections ? form.sections.length : 0 %>">
                        
                        <% let globalQuestionIndex = 0; %>
                        <% if (form.sections && form.sections.length > 0) { %>
                            <% form.sections.forEach((section, sIndex) => { %>
                                <div class="section-card mb-4" data-section-id="<%= section._id %>" data-section-index="<%= sIndex %>">
                                    <h3 class="section-title mb-3"><%= section.title %></h3>
                                    <input type="hidden" name="sections[<%= sIndex %>][sectionID]" value="<%= section._id %>">
                                    <input type="hidden" name="sections[<%= sIndex %>][sectionTitle]" value="<%= section.title %>">
                                    
                                    <% if (section.description) { %>
                                        <p class="section-description text-muted mb-4"><%= section.description %></p>
                                    <% } %>
                                    
                                    <% if (section.questions && section.questions.length > 0) { %>
                                        <% section.questions.forEach((question, qIndex) => { %>
                                            <div class="question-container <%= qIndex % 2 === 0 ? 'bg-light' : 'bg-white' %> rounded border p-3 mb-3" 
                                                 data-question-id="<%= question._id %>" 
                                                 data-global-index="<%= globalQuestionIndex %>"
                                                 data-section-index="<%= sIndex %>">
                                                <h4 class="mb-3 fw-semibold fs-5">
                                                    <%= question.text %> 
                                                    <% if (question.required) { %>
                                                        <span class="required-star text-danger">*</span>
                                                    <% } %>
                                                </h4>
                                                
                                                <!-- Store question metadata -->
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][questionID]" value="<%= question._id %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][questionText]" value="<%= question.text %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][sectionID]" value="<%= section._id %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][sectionTitle]" value="<%= section.title %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][sectionIndex]" value="<%= sIndex %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][questionType]" value="<%= question.type %>">
                                                <input type="hidden" name="answers[<%= globalQuestionIndex %>][questionIndex]" value="<%= qIndex %>">
                                                
                                                <div class="question-input mt-3">
                                                    <% if (question.type === 'text') { %>
                                                        <input type="text" 
                                                               name="answers[<%= globalQuestionIndex %>][responseText]" 
                                                               class="form-control" 
                                                               data-section-title="<%= section.title %>"
                                                               data-section-id="<%= section._id %>"
                                                               data-section-index="<%= sIndex %>"
                                                               <% if (question.required) { %>required<% } %>>
                                                               
                                                    <% } else if (question.type === 'textarea') { %>
                                                        <textarea name="answers[<%= globalQuestionIndex %>][responseText]" 
                                                                  class="form-control" 
                                                                  rows="4"
                                                                  data-section-title="<%= section.title %>"
                                                                  data-section-id="<%= section._id %>"
                                                                  data-section-index="<%= sIndex %>"
                                                                  <% if (question.required) { %>required<% } %>></textarea>
                                                               
                                                    <% } else if (question.type === 'rating') { %>
                                                        <div class="rating-container d-flex flex-wrap align-items-center justify-content-start gap-3 my-2">
                                                            <% if (question.options && question.options.length > 0) { %>
                                                                <% question.options.forEach((option, i) => { %>
                                                                    <div class="rating-option form-check">
                                                                        <input type="radio" 
                                                                               class="form-check-input" 
                                                                               id="rating-<%= section._id %>-<%= question._id %>-<%= i %>" 
                                                                               name="answers[<%= globalQuestionIndex %>][responseRating]" 
                                                                               value="<%= option %>"
                                                                               data-section-title="<%= section.title %>"
                                                                               data-section-id="<%= section._id %>"
                                                                               data-section-index="<%= sIndex %>"
                                                                               <% if (question.required) { %>required<% } %>>
                                                                        <label class="form-check-label" 
                                                                               for="rating-<%= section._id %>-<%= question._id %>-<%= i %>"><%= option %></label>
                                                                    </div>
                                                                <% }); %>
                                                            <% } else { %>
                                                                <!-- Default 1-5 rating if no options provided -->
                                                                <% for (let i = 1; i <= 5; i++) { %>
                                                                    <div class="rating-option form-check">
                                                                        <input type="radio" 
                                                                               class="form-check-input" 
                                                                               id="rating-<%= section._id %>-<%= question._id %>-<%= i %>" 
                                                                               name="answers[<%= globalQuestionIndex %>][responseRating]" 
                                                                               value="<%= i %>"
                                                                               data-section-title="<%= section.title %>"
                                                                               data-section-id="<%= section._id %>"
                                                                               data-section-index="<%= sIndex %>"
                                                                               <% if (question.required) { %>required<% } %>>
                                                                        <label class="form-check-label" 
                                                                               for="rating-<%= section._id %>-<%= question._id %>-<%= i %>"><%= i %></label>
                                                                    </div>
                                                                <% } %>
                                                            <% } %>
                                                        </div>
                                                        
                                                    <% } else if (question.type === 'yes_no') { %>
                                                        <div class="yes-no-container d-flex flex-wrap gap-4 my-2">
                                                            <div class="option form-check">
                                                                <input type="radio" 
                                                                       class="form-check-input" 
                                                                       id="yes-<%= section._id %>-<%= question._id %>" 
                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                       value="Yes"
                                                                       data-section-title="<%= section.title %>"
                                                                       data-section-id="<%= section._id %>"
                                                                       data-section-index="<%= sIndex %>"
                                                                       <% if (question.required) { %>required<% } %>>
                                                                <label class="form-check-label" 
                                                                       for="yes-<%= section._id %>-<%= question._id %>">
                                                                    <%= question.yesNoLabels && question.yesNoLabels.yes ? question.yesNoLabels.yes : 'Yes' %>
                                                                </label>
                                                            </div>
                                                            <div class="option form-check">
                                                                <input type="radio" 
                                                                       class="form-check-input" 
                                                                       id="no-<%= section._id %>-<%= question._id %>" 
                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                       value="No"
                                                                       data-section-title="<%= section.title %>"
                                                                       data-section-id="<%= section._id %>"
                                                                       data-section-index="<%= sIndex %>"
                                                                       <% if (question.required) { %>required<% } %>>
                                                                <label class="form-check-label" 
                                                                       for="no-<%= section._id %>-<%= question._id %>">
                                                                    <%= question.yesNoLabels && question.yesNoLabels.no ? question.yesNoLabels.no : 'No' %>
                                                                </label>
                                                            </div>
                                                            <div class="option form-check">
                                                                <input type="radio" 
                                                                       class="form-check-input" 
                                                                       id="no-opinion-<%= section._id %>-<%= question._id %>" 
                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                       value="No Opinion"
                                                                       data-section-title="<%= section.title %>"
                                                                       data-section-id="<%= section._id %>"
                                                                       data-section-index="<%= sIndex %>">
                                                                <label class="form-check-label" 
                                                                       for="no-opinion-<%= section._id %>-<%= question._id %>">No Opinion</label>
                                                            </div>
                                                        </div>
                                                        
                                                    <% } else if (question.type === 'mcq' || question.type === 'radio') { %>
                                                        <div class="mcq-container my-2">
                                                            <% if (question.options && Array.isArray(question.options)) { %>
                                                                <div class="row">
                                                                    <% question.options.forEach((option, index) => { %>
                                                                        <div class="col-md-6 col-sm-12 mb-2">
                                                                            <div class="option form-check">
                                                                                <input type="radio" 
                                                                                       class="form-check-input" 
                                                                                       id="mcq-<%= section._id %>-<%= question._id %>-<%= index %>" 
                                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                                       value="<%= option %>"
                                                                                       data-section-title="<%= section.title %>"
                                                                                       data-section-id="<%= section._id %>"
                                                                                       data-section-index="<%= sIndex %>"
                                                                                       <% if (question.required) { %>required<% } %>>
                                                                                <label class="form-check-label" 
                                                                                       for="mcq-<%= section._id %>-<%= question._id %>-<%= index %>"><%= option %></label>
                                                                            </div>
                                                                        </div>
                                                                    <% }); %>
                                                                </div>
                                                            <% } %>
                                                        </div>
                                                        
                                                    <% } else if (question.type === 'checkbox') { %>
                                                        <div class="checkbox-container my-2">
                                                            <% if (question.options && Array.isArray(question.options)) { %>
                                                                <div class="row">
                                                                    <% question.options.forEach((option, index) => { %>
                                                                        <div class="col-md-6 col-sm-12 mb-2">
                                                                            <div class="option form-check">
                                                                                <input type="checkbox" 
                                                                                       class="form-check-input" 
                                                                                       id="checkbox-<%= section._id %>-<%= question._id %>-<%= index %>" 
                                                                                       name="answers[<%= globalQuestionIndex %>][responseOptions][]" 
                                                                                       value="<%= option %>"
                                                                                       data-section-title="<%= section.title %>"
                                                                                       data-section-id="<%= section._id %>"
                                                                                       data-section-index="<%= sIndex %>">
                                                                                <label class="form-check-label" 
                                                                                       for="checkbox-<%= section._id %>-<%= question._id %>-<%= index %>"><%= option %></label>
                                                                            </div>
                                                                        </div>
                                                                    <% }); %>
                                                                </div>
                                                            <% } %>
                                                        </div>
                                                        
                                                    <% } else if (question.type === 'dropdown') { %>
                                                        <select name="answers[<%= globalQuestionIndex %>][responseOptions]" 
                                                                class="form-select"
                                                                data-section-title="<%= section.title %>"
                                                                data-section-id="<%= section._id %>"
                                                                data-section-index="<%= sIndex %>"
                                                                <% if (question.required) { %>required<% } %>>
                                                            <option value="">Select an option</option>
                                                            <% if (question.options && Array.isArray(question.options)) { %>
                                                                <% question.options.forEach(option => { %>
                                                                    <option value="<%= option %>"><%= option %></option>
                                                                <% }); %>
                                                            <% } %>
                                                        </select>
                                                        
                                                    <% } else if (question.type === 'date') { %>
                                                        <input type="date" 
                                                               name="answers[<%= globalQuestionIndex %>][responseDate]" 
                                                               class="form-control"
                                                               data-section-title="<%= section.title %>"
                                                               data-section-id="<%= section._id %>"
                                                               data-section-index="<%= sIndex %>"
                                                               <% if (question.required) { %>required<% } %>>
                                                                
                                                    <% } else if (question.type === 'grid') { %>
                                                        <div class="table-responsive">
                                                            <table class="grid-question-table table table-bordered" data-grid-id="<%= question._id %>">
                                                                <thead class="table-light">
                                                                    <tr>
                                                                        <th></th>
                                                                        <% if (question.gridOptions && Array.isArray(question.gridOptions.columns)) { %>
                                                                            <% question.gridOptions.columns.forEach(column => { %>
                                                                                <th class="text-center"><%= column %></th>
                                                                            <% }); %>
                                                                        <% } %>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>
                                                                    <% if (question.gridOptions && Array.isArray(question.gridOptions.rows)) { %>
                                                                        <% question.gridOptions.rows.forEach(row => { %>
                                                                            <tr>
                                                                                <td class="fw-semibold"><%= row %></td>
                                                                                <% if (question.gridOptions && Array.isArray(question.gridOptions.columns)) { %>
                                                                                    <% question.gridOptions.columns.forEach((column, colIndex) => { %>
                                                                                        <td class="text-center">
                                                                                            <input type="radio" 
                                                                                                   class="form-check-input" 
                                                                                                   name="answers[<%= globalQuestionIndex %>][gridResponses][<%= row %>]" 
                                                                                                   value="<%= column %>"
                                                                                                   data-section-title="<%= section.title %>"
                                                                                                   data-section-id="<%= section._id %>"
                                                                                                   data-section-index="<%= sIndex %>"
                                                                                                   data-row="<%= row %>"
                                                                                                   <% if (question.required) { %>required<% } %>>
                                                                                        </td>
                                                                                    <% }); %>
                                                                                <% } %>
                                                                            </tr>
                                                                        <% }); %>
                                                                    <% } %>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                        <input type="hidden" name="answers[<%= globalQuestionIndex %>][responseText]" id="grid-data-<%= section._id %>-<%= question._id %>">
                                                        
                                                    <% } else { %>
                                                        <!-- Default to text input if type is not recognized -->
                                                        <input type="text" 
                                                               name="answers[<%= globalQuestionIndex %>][responseText]" 
                                                               class="form-control"
                                                               data-section-title="<%= section.title %>"
                                                               data-section-id="<%= section._id %>"
                                                               data-section-index="<%= sIndex %>"
                                                               <% if (question.required) { %>required<% } %>>
                                                    <% } %>
                                                </div>
                                            </div>
                                            <% globalQuestionIndex++; %>
                                        <% }); %>
                                    <% } %>
                                </div>
                            <% }); %>
                        <% } %>
                        
                        <!-- Section summary (will be populated dynamically) -->
                        <div class="section-summary mb-4 p-3 border rounded bg-light">
                            <h4 class="mb-3">Response Summary</h4>
                            <div id="sectionSummaries"></div>
                            <div class="total-summary mt-3 pt-3 border-top">
                                <div class="d-flex justify-content-between">
                                    <strong>Total Questions:</strong>
                                    <span id="totalQuestions">0</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <strong>Questions Answered:</strong>
                                    <span id="questionsAnswered">0</span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <strong>Completion Rate:</strong>
                                    <span id="completionRate">0%</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="d-flex justify-content-end mt-4 mb-2">
                            <a href="/student/studentFormsPage" class="btn btn-outline-secondary me-2">
                                <i class="fas fa-times me-1"></i> Cancel
                            </a>
                            <button type="submit" class="btn btn-primary btn-submit">
                                <i class="fas fa-paper-plane me-1"></i> Submit Response
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <!-- Toastify JS -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
          // Show toast function
          const showToast = (message, type) => {
              const backgroundColor = type === 'error' ? '#e74c3c' : 
                                      type === 'success' ? '#2ecc71' : 
                                      type === 'warning' ? '#f39c12' : '#3498db';
              
              Toastify({
                  text: message,
                  duration: 5000,
                  close: true,
                  gravity: "top",
                  position: "right", 
                  backgroundColor: backgroundColor,
                  stopOnFocus: true
              }).showToast();
          };
          
          // Display flash messages if they exist
          if (typeof messages !== 'undefined') {
              if (messages.error) {
                  messages.error.forEach(function(message) {
                      showToast(message, 'error');
                  });
              }
              if (messages.success) {
                  messages.success.forEach(function(message) {
                      showToast(message, 'success');
                  });
              }
          }
          
          if (typeof successMessage !== 'undefined' && successMessage) {
              showToast(successMessage, 'success');
          }
          
          // Form validation and submission handling
          const form = document.getElementById('feedbackForm');
          if (form) {
              // Create a response tracker to store all form responses
              const formResponses = {};
              
              // Create section data tracker
              const sectionData = {};
              
              // Initialize section data
              document.querySelectorAll('.section-card').forEach(sectionEl => {
                  const sectionId = sectionEl.getAttribute('data-section-id');
                  const sectionIndex = parseInt(sectionEl.getAttribute('data-section-index'));
                  const sectionTitle = sectionEl.querySelector('.section-title').textContent;
                  
                  sectionData[sectionIndex] = {
                      sectionID: sectionId,
                      sectionTitle: sectionTitle,
                      totalQuestions: 0,
                      answeredQuestions: 0,
                      questions: {}
                  };
                  
                  // Count questions in this section
                  const questionContainers = sectionEl.querySelectorAll('.question-container');
                  sectionData[sectionIndex].totalQuestions = questionContainers.length;
                  
                  // Initialize question data
                  questionContainers.forEach(container => {
                      const globalIndex = container.getAttribute('data-global-index');
                      const questionId = container.getAttribute('data-question-id');
                      
                      sectionData[sectionIndex].questions[globalIndex] = {
                          questionID: questionId,
                          answered: false
                      };
                  });
              });
              
              // Process grid questions to collect their data 
              const processGridQuestions = () => {
                  document.querySelectorAll('.grid-question-table').forEach(table => {
                      const questionContainer = table.closest('.question-container');
                      if (!questionContainer) return;
                      
                      const globalIndex = questionContainer.getAttribute('data-global-index');
                      const sectionIndex = questionContainer.getAttribute('data-section-index');
                      const questionIdInput = questionContainer.querySelector('[name$="[questionID]"]');
                      if (!questionIdInput) return;
                      
                      const questionId = questionIdInput.value;
                      const gridData = {};
                      
                      // Get all rows with selected values
                      table.querySelectorAll('tbody tr').forEach(row => {
                          const rowTitle = row.querySelector('td').textContent.trim();
                          const checkedRadio = row.querySelector('input[type="radio"]:checked');
                          
                          if (checkedRadio) {
                              gridData[rowTitle] = checkedRadio.value;
                          }
                      });
                      
                      // Store in formResponses
                      if (!formResponses[globalIndex]) {
                          formResponses[globalIndex] = {
                              questionID: questionId,
                              questionText: questionContainer.querySelector('[name$="[questionText]"]').value,
                              sectionTitle: questionContainer.querySelector('[name$="[sectionTitle]"]').value,
                              sectionID: questionContainer.querySelector('[name$="[sectionID]"]').value,
                              sectionIndex: parseInt(sectionIndex),
                              questionType: questionContainer.querySelector('[name$="[questionType]"]').value,
                              responseText: JSON.stringify(gridData),
                              responseOptions: [],
                              gridResponses: gridData
                          };
                      } else {
                          formResponses[globalIndex].responseText = JSON.stringify(gridData);
                          formResponses[globalIndex].gridResponses = gridData;
                      }
                      
                      // Set the JSON string in the hidden input
                      const hiddenInput = document.getElementById(`grid-data-${questionContainer.querySelector('[name$="[sectionID]"]').value}-${questionId}`);
                      if (hiddenInput) {
                          hiddenInput.value = JSON.stringify(gridData);
                      }
                      
                      // Check if this question is answered
                      const hasAnswers = Object.keys(gridData).length > 0;
                      if (hasAnswers && sectionData[sectionIndex] && sectionData[sectionIndex].questions[globalIndex]) {
                          sectionData[sectionIndex].questions[globalIndex].answered = true;
                          
                          // If this is a newly answered question, increment the section's answered count
                          if (!sectionData[sectionIndex].questions[globalIndex].previouslyAnswered) {
                              sectionData[sectionIndex].answeredQuestions++;
                              sectionData[sectionIndex].questions[globalIndex].previouslyAnswered = true;
                          }
                      }
                  });
              };
      
              // Add event listeners to all form inputs to track responses
              document.querySelectorAll('#feedbackForm input, #feedbackForm textarea, #feedbackForm select').forEach(input => {
                  // Skip hidden inputs for metadata
                  if (input.type === 'hidden' && !input.name.includes('responseText')) return;
                  
                  // Extract question index from input name
                  const indexMatch = input.name.match(/answers\[(\d+)\]/);
                  if (!indexMatch) return;
                  
                  const globalIndex = indexMatch[1];
                  
                  // Input change handler
                  const handleInputChange = function() {
                      const container = this.closest('.question-container');
                      if (!container) return;
                      
                      const sectionIndex = container.getAttribute('data-section-index');
                      
                      // Initialize response object if it doesn't exist
                      if (!formResponses[globalIndex]) {
                          const questionIdInput = container.querySelector('[name$="[questionID]"]');
                          const questionTextInput = container.querySelector('[name$="[questionText]"]');
                          const sectionIdInput = container.querySelector('[name$="[sectionID]"]');
                          const sectionTitleInput = container.querySelector('[name$="[sectionTitle]"]');
                          const questionTypeInput = container.querySelector('[name$="[questionType]"]');
                          
                          if (!questionIdInput || !questionTextInput || !sectionTitleInput || !questionTypeInput) return;
                          
                          formResponses[globalIndex] = {
                              questionID: questionIdInput.value,
                              questionText: questionTextInput.value,
                              sectionID: sectionIdInput.value,
                              sectionTitle: sectionTitleInput.value,
                              sectionIndex: parseInt(sectionIndex),
                              questionType: questionTypeInput.value,
                              responseText: '',
                              responseOptions: []
                          };
                      }
                      
                      // Update the response data based on input type
                      if (this.type === 'text' || this.type === 'date' || this.tagName === 'TEXTAREA' || this.tagName === 'SELECT') {
                          formResponses[globalIndex].responseText = this.value.trim();
                      } else if (this.type === 'radio') {
                          if (this.checked) {
                              formResponses[globalIndex].responseOptions = [this.value];
                          }
                      } else if (this.type === 'checkbox') {
                          // For checkboxes, we need to collect all selected values
                          if (!Array.isArray(formResponses[globalIndex].responseOptions)) {
                              formResponses[globalIndex].responseOptions = [];
                          }
                          
                          if (this.checked) {
                              if (!formResponses[globalIndex].responseOptions.includes(this.value)) {
                                  formResponses[globalIndex].responseOptions.push(this.value);
                              }
                          } else {
                              const index = formResponses[globalIndex].responseOptions.indexOf(this.value);
                              if (index > -1) {
                                  formResponses[globalIndex].responseOptions.splice(index, 1);
                              }
                          }
                      }
                      
                      // Update section data - mark as answered if there's a value
                      if (sectionData[sectionIndex] && sectionData[sectionIndex].questions[globalIndex]) {
                          const wasAnswered = sectionData[sectionIndex].questions[globalIndex].answered;
                          
                          // Check if question is now answered
                          let isAnswered = false;
                          
                          if (this.type === 'text' || this.type === 'date' || this.tagName === 'TEXTAREA' || this.tagName === 'SELECT') {
                              isAnswered = this.value.trim() !== '';
                          } else if (this.type === 'radio') {
                              isAnswered = this.checked;
                          } else if (this.type === 'checkbox') {
                              // For checkboxes, we need to check if any checkbox in this group is checked
                              const checkboxes = document.querySelectorAll(`input[name="${this.name}"]`);
                              isAnswered = Array.from(checkboxes).some(cb => cb.checked);
                          }
                          
                          sectionData[sectionIndex].questions[globalIndex].answered = isAnswered;
                          
                          // Update section answered count if needed
                          if (!wasAnswered && isAnswered) {
                              sectionData[sectionIndex].answeredQuestions++;
                              sectionData[sectionIndex].questions[globalIndex].previouslyAnswered = true;
                          } else if (wasAnswered && !isAnswered) {
                              sectionData[sectionIndex].answeredQuestions--;
                              sectionData[sectionIndex].questions[globalIndex].previouslyAnswered = false;
                          }
                          
                          // Update the summary display
                          updateSummary();
                      }
                  };
                  
                  // Attach event listeners based on input type
                  if (input.type === 'checkbox' || input.type === 'radio') {
                      input.addEventListener('change', handleInputChange);
                  } else {
                      input.addEventListener('input', handleInputChange);
                      // Also trigger on blur to catch paste events
                      input.addEventListener('blur', handleInputChange);
                  }
              });
              
              // Function to update the summary display
              const updateSummary = () => {
                  const summaryContainer = document.getElementById('sectionSummaries');
                  if (!summaryContainer) return;
                  
                  summaryContainer.innerHTML = '';
                  
                  let totalQuestions = 0;
                  let totalAnswered = 0;
                  
                  // Process each section
                  Object.values(sectionData).sort((a, b) => a.sectionIndex - b.sectionIndex).forEach(section => {
                      const sectionDiv = document.createElement('div');
                      sectionDiv.className = 'mb-2 pb-2 border-bottom';
                      
                      const sectionHeader = document.createElement('div');
                      sectionHeader.className = 'd-flex justify-content-between align-items-center';
                      
                      const sectionTitle = document.createElement('span');
                      sectionTitle.textContent = section.sectionTitle;
                      sectionTitle.className = 'fw-medium';
                      
                      const progressWrapper = document.createElement('div');
                      progressWrapper.className = 'd-flex align-items-center gap-2';
                      
                      const completionText = document.createElement('span');
                      completionText.className = 'text-nowrap small';
                      completionText.textContent = `${section.answeredQuestions}/${section.totalQuestions}`;
                      
                      const progressPercentage = section.totalQuestions > 0 
                          ? Math.round((section.answeredQuestions / section.totalQuestions) * 100) 
                          : 0;
                      
                      const progressBar = document.createElement('div');
                      progressBar.className = 'progress flex-grow-1';
                      progressBar.style.height = '10px';
                      progressBar.style.width = '100px';
                      
                      const progressBarInner = document.createElement('div');
                      progressBarInner.className = 'progress-bar';
                      progressBarInner.style.width = `${progressPercentage}%`;
                      progressBarInner.setAttribute('role', 'progressbar');
                      progressBarInner.setAttribute('aria-valuenow', progressPercentage);
                      progressBarInner.setAttribute('aria-valuemin', '0');
                      progressBarInner.setAttribute('aria-valuemax', '100');
                      
                      // Add color based on completion percentage
                      if (progressPercentage < 33) {
                          progressBarInner.classList.add('bg-danger');
                      } else if (progressPercentage < 67) {
                          progressBarInner.classList.add('bg-warning');
                      } else {
                          progressBarInner.classList.add('bg-success');
                      }
                      
                      progressBar.appendChild(progressBarInner);
                      progressWrapper.appendChild(progressBar);
                      progressWrapper.appendChild(completionText);
                      
                      sectionHeader.appendChild(sectionTitle);
                      sectionHeader.appendChild(progressWrapper);
                      sectionDiv.appendChild(sectionHeader);
                      
                      summaryContainer.appendChild(sectionDiv);
                      
                      // Update totals
                      totalQuestions += section.totalQuestions;
                      totalAnswered += section.answeredQuestions;
                  });
                  
                  // Update total summary
                  document.getElementById('totalQuestions').textContent = totalQuestions;
                  document.getElementById('questionsAnswered').textContent = totalAnswered;
                  
                  const overallPercentage = totalQuestions > 0 
                      ? Math.round((totalAnswered / totalQuestions) * 100) 
                      : 0;
                  document.getElementById('completionRate').textContent = `${overallPercentage}%`;
              };
              
              // Process deadline to show countdown
              const deadlineElement = document.querySelector('[data-deadline]');
              if (deadlineElement) {
                  const deadline = new Date(deadlineElement.getAttribute('data-deadline'));
                  const now = new Date();
                  
                  const daysLeft = Math.ceil((deadline - now) / (1000 * 60 * 60 * 24));
                  
                  if (daysLeft > 0) {
                      const suffix = daysLeft === 1 ? 'day' : 'days';
                      deadlineElement.innerHTML += ` <span class="badge bg-warning text-dark">${daysLeft} ${suffix} left</span>`;
                  } else if (daysLeft === 0) {
                      deadlineElement.innerHTML += ' <span class="badge bg-danger">Due today!</span>';
                  } else {
                      deadlineElement.innerHTML += ' <span class="badge bg-danger">Overdue!</span>';
                  }
              }
              
              // Initial processing of grid questions and summary update
              processGridQuestions();
              updateSummary();
              
              // Form submission handler
              form.addEventListener('submit', function(e) {
                  e.preventDefault();
                  
                  // Re-process grid questions to ensure we have the latest data
                  processGridQuestions();
                  
                  // Check if all required fields are filled
                  const requiredInputs = form.querySelectorAll('[required]');
                  let missingRequired = false;
                  
                  requiredInputs.forEach(input => {
                      if ((input.type === 'text' || input.type === 'date' || input.tagName === 'TEXTAREA' || input.tagName === 'SELECT') && !input.value.trim()) {
                          missingRequired = true;
                          input.classList.add('is-invalid');
                      } else if ((input.type === 'radio' || input.type === 'checkbox')) {
                          // Check if any radio in the group is checked
                          const inputName = input.name;
                          const radioGroup = form.querySelectorAll(`[name="${inputName}"]`);
                          const anyChecked = Array.from(radioGroup).some(radio => radio.checked);
                          
                          if (!anyChecked) {
                              missingRequired = true;
                              // Only add the error class to one element in the group
                              if (!document.querySelector(`[name="${inputName}"].is-invalid`)) {
                                  input.classList.add('is-invalid');
                              }
                          }
                      }
                  });
                  
                  if (missingRequired) {
                      showToast('Please fill in all required fields.', 'error');
                      
                      // Scroll to the first invalid input
                      const firstInvalid = form.querySelector('.is-invalid');
                      if (firstInvalid) {
                          const container = firstInvalid.closest('.question-container');
                          if (container) {
                              container.scrollIntoView({ behavior: 'smooth', block: 'center' });
                          }
                      }
                      
                      return;
                  }
                  
                  // All validation passed, submit the form
                  form.submit();
              });
              
              // Remove invalid state when user starts to correct the input
              form.querySelectorAll('input, textarea, select').forEach(input => {
                  if (input.type === 'radio' || input.type === 'checkbox') {
                      input.addEventListener('change', function() {
                          const name = this.name;
                          form.querySelectorAll(`[name="${name}"]`).forEach(el => {
                              el.classList.remove('is-invalid');
                          });
                      });
                  } else {
                      input.addEventListener('input', function() {
                          this.classList.remove('is-invalid');
                      });
                  }
              });
          }
        });
    </script>
</body>
                    
</html>