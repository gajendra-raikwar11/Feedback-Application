<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Font Awesome for icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="/public/css/admin-css.css">
    <link rel="stylesheet" href="/public/scripts/admin-js.js">
    <link rel="shortcut icon" href="/images/android-chrome-192x192.png" type="image/x-icon">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.16/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.16.2/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.7.0/chart.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.11.4/ScrollTrigger.min.js"></script>
    <style>
        :root {
            --primary-color: #4e73df;
            --secondary-color: #1cc88a;
            --third-color:rgb(88, 161, 88);
            --dark-color: #5a5c69;
            --light-color: #f8f9fc;
        }
        
        body {
            font-family: 'Nunito', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background-color: #f8f9fc;
        }
        
        #wrapper {
            display: flex;
        }
        
        #content-wrapper {
            background-color: #f8f9fc;
            width: 100%;
            overflow-x: hidden;
            margin-left: 230px;
            transition: all 0.3s;
        }
        
        .navbar {
            background-color: #fff;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
            position: relative;
            z-index: 1;
        }
        
        .card {
            border: none;
            border-radius: 0.35rem;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
            margin-bottom: 1.5rem;
        }
        
        .card-header {
            background-color: #f8f9fc;
            border-bottom: 1px solid #e3e6f0;
            padding: 0.75rem 1.25rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .card-header h6 {
            font-weight: 700;
            margin-bottom: 0;
            color: var(--primary-color);
        }
        
        .dashboard-card {
            background-color: #fff;
            border-left: 0.25rem solid var(--primary-color);
            border-radius: 0.35rem;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
            margin-bottom: 1.5rem;
            padding: 1rem;
            position: relative;
            transition: transform 0.3s;
        }
        
        .dashboard-card:hover {
            transform: translateY(-5px);
        }
        
        .dashboard-card-blue {
            border-left-color: var(--primary-color);
        }
        
        .dashboard-card-green {
            border-left-color: var(--secondary-color);
        }
        
        .dashboard-card-yellow {
            border-left-color: #f6c23e;
        }
        
        .dashboard-card-red {
            border-left-color: #e74a3b;
        }
        
        .dashboard-card h4 {
            color: var(--dark-color);
            font-weight: 700;
            margin-bottom: 0.5rem;
        }
        
        .dashboard-card .number {
            color: var(--dark-color);
            font-size: 1.5rem;
            font-weight: 700;
        }
        
        .dashboard-card .icon {
            position: absolute;
            top: 50%;
            right: 1.5rem;
            transform: translateY(-50%);
            color: rgba(0, 0, 0, 0.1);
            font-size: 2rem;
        }
        
        .custom-dropdown .dropdown-toggle::after {
            display: none;
        }
        
        @media (max-width: 768px) {
            #content-wrapper {
                margin-left: 0;
            }
        }
        
        .table-responsive {
            max-height: 400px;
            overflow-y: auto;
            position: relative;
        }
        .table thead {
    position: sticky;
    top: 0;
    background: white; /* Background white rakho taki content overlap na ho */
    z-index: 10;
}
        
        .filter-section {
            background-color: #fff;
            border-radius: 0.35rem;
            padding: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.1);
        }
        
        .form-card {
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .form-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.15);
        }
        
        .badge-active {
            background-color: var(--secondary-color);
        }
        
        .badge-inactive {
            background-color: #e74a3b;
        }
        
        .badge-pending {
            background-color: #f6c23e;
        }
        .chart-container {
        height: 400px;
        width: 100%;
        max-width: 600px;
        margin: auto;
        padding: 30px;
        position: relative;
        }

        /* Responsive height for small screens */
        @media (max-width: 768px) {
        .chart-container {
            height: auto;
            min-height: 250px;
        }
        }

    </style>
</head>
<body>

<div id="wrapper">
    <!-- Sidebar -->
    <%- include('./partials/adminSideNavbar', { path: currentPath ,admin: adminData  }) %>
    <!-- Content Wrapper -->
    <div id="content-wrapper" class="d-flex flex-column">
        <!-- Main Content -->
        <div id="content">
            <!-- Topbar -->
              <%- include('partials/adminTopNavbar', { admin: adminData }) %>
            <!-- Begin Page Content -->
            <div class="container-fluid px-5">
                <!-- Page Heading -->
                <div class="d-sm-flex align-items-center justify-content-between mb-4">
                    <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
                    <a href="#" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
                        <i class="fas fa-download fa-sm text-white-50"></i> Generate Report
                    </a>
                </div>
                
                <!-- Content Row -->
                <div class="row">
                    <!-- Faculty Card -->
                    <div class="col-xl-3 col-md-6 mb-4">
                        <div class="dashboard-card dashboard-card-blue">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col">
                                        <h4 class="font-weight-bold text-primary text-uppercase mb-1">Faculty Members</h4>
                                        <div class="number mb-0"><%= faculties.length %></div>
                                    
                                        <div class="dropdown mt-2">
                                            <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" id="facultyDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                                Filter by Subject
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="facultyDropdown">
                                                <li><a class="dropdown-item" href="/adminHome">All Subjects</a></li>
                                                <% uniqueSubjects.forEach(subject => { %>
                                                    <li><a class="dropdown-item" href="/adminHome?subject=<%= subject %>"><%= subject %></a></li>
                                                <% }); %>
                                            </ul>
                                        </div>
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-chalkboard-teacher fa-2x text-gray-300"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Students Card -->
                    <div class="col-xl-3 col-md-6 mb-4">
                        <div class="dashboard-card dashboard-card-green">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col">
                                        <h4 class="font-weight-bold text-success text-uppercase mb-1">
                                            Students
                                        </h4>
                                        <div class="number mb-0"><%= students.length %></div> <!-- Dynamic Total Count -->
                                        
                                        <div class="dropdown mt-2">
                                            <button class="btn btn-sm btn-outline-success dropdown-toggle" type="button" id="sectionDropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                                Filter by Section
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="sectionDropdown">
                                                <li><a class="dropdown-item" href="/adminHome">All Sections</a></li>
                                                <% if (uniqueSections.length > 0) { %>
                                                    <% uniqueSections.forEach(section => { %>
                                                        <li><a class="dropdown-item" href="/adminHome?section=<%= section %>"><%= section %></a></li>
                                                    <% }); %>
                                                <% } else { %>
                                                    <li class="dropdown-item text-muted">No Sections Available</li>
                                                <% } %>
                                            </ul>
                                        </div>
                                    </div>
                                    
                                    <div class="col-auto">
                                        <i class="fas fa-user-graduate fa-2x text-gray-300"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    
                    <!-- Feedback Submitted Card -->
                    <div class="col-xl-3 col-md-6 mb-4">
                        <div class="dashboard-card dashboard-card-yellow">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col">
                                        <h4 class="font-weight-bold text-warning text-uppercase mb-1">
                                            Submitted Feedback
                                        </h4>
                                        <div class="number mb-0">200</div>
                                        <a href="#" class="btn btn-sm btn-outline-warning mt-2">View Details</a>
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-clipboard-check fa-2x text-gray-300"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Pending Feedback Card -->
                    <div class="col-xl-3 col-md-6 mb-4">
                        <div class="dashboard-card dashboard-card-red">
                            <div class="card-body">
                                <div class="row align-items-center">
                                    <div class="col">
                                        <h4 class="font-weight-bold text-danger text-uppercase mb-1">
                                            Pending Feedback
                                        </h4>
                                        <div class="number mb-0">22</div>
                                        <a href="#" class="btn btn-sm btn-outline-danger mt-2">View Details</a>
                                    </div>
                                    <div class="col-auto">
                                        <i class="fas fa-clipboard-list fa-2x text-gray-300"></i>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <!-- Content Row -->
                <div class="row">
                    <div class="col-lg-6 mb-4">
                        <div class="card shadow mb-4">
                            <div class="card-header py-4">
                                <h6 class="m-0 font-weight-bold text-primary">Create Feedback Forms</h6>
                            </div>
                            <div class="card-body py-16">
                                <div class="row">
                                    <div class="col-md-4 mb-3">
                                        <div class="card form-card">
                                            <div class="card-body text-center">
                                                <i class="fas fa-book fa-3x mb-3 text-primary"></i>
                                                <h5>Academic</h5>
                                                <a href="/admin/adminHome/forms/create/Academic" class="btn btn-sm btn-primary mt-2 form-create-btn" data-form-type="academic">Create</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4 mb-3">
                                        <div class="card form-card">
                                            <div class="card-body text-center">
                                                <i class="fas fa-university fa-3x mb-3 text-success"></i>
                                                <h5>Institutional</h5>
                                                <a href="/admin/adminHome/forms/create/Institutional" class="btn btn-sm btn-success mt-2 form-create-btn" data-form-type="institutional">Create</a>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-4 mb-3">
                                        <div class="card form-card">
                                            <div class="card-body text-center">
                                                <i class="fas fa-laptop-code fa-3x mb-3 text-info"></i>
                                                <h5>Training</h5>
                                                <a href="/admin/adminHome/forms/create/Training" class="btn btn-sm btn-info mt-2 form-create-btn" data-form-type="training">Create</a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="text-center mt-3">
                                    <a href="/adminadminHome//forms/create/custom-template-use" class="btn btn-primary form-create-btn" data-form-type="custom">
                                        <i class="fas fa-plus mr-2"></i>Create Custom Form
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Manage Forms Section -->
                    <!-- Manage Forms Section -->
                    <div class="col-lg-6 mb-4">
                        <div class="card shadow mb-4">
                            <div class="card-header py-3 d-flex justify-content-between align-items-center">
                                <h6 class="m-0 font-weight-bold text-primary">Manage Feedback Forms</h6>
                                <div class="input-group" style="width: 200px;">
                                    <select class="form-select form-select-sm" id="formStatusFilter">
                                        <option value="all">All Forms</option>
                                        <option value="active">Active</option>
                                        <option value="inactive">Inactive</option>
                                    </select>
                                </div>
                            </div>
                            <div class="card-body">
                                <div class="table-responsive" style="max-height: 300px; overflow-y: auto;">

                                    <table class="table table-hover">
                                        <thead style="position: sticky; top: 0; background: white; z-index: 10;">
                                            <tr>
                                                <th>Form Title</th>
                                                <th>Type</th>
                                                <th>Status</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% if(forms && forms.length > 0) { %>
                                                <% forms.forEach(form => { %>
                                                    <tr>
                                                        <td><%= form.title %></td>
                                                        <td><%= form.formType %></td>
                                                        <td>
                                                            <% if(form.status === 'active') { %>
                                                                <span class="badge bg-success">Active</span>
                                                            <% } else if(form.status === 'closed') { %>
                                                                <span class="badge bg-danger">Inactive</span>
                                                            <% } %>
                                                        </td>
                                                        <td>
                                                            <div class="btn-group">
                                                                <button class="btn btn-sm btn-primary" onclick="editForm('<%= form._id %>')">
                                                                    <i class="fas fa-edit"></i>
                                                                </button>
                                                                
                                                                <% if(form.status === 'active') { %>
                                                                    <button class="btn btn-sm btn-danger" onclick="toggleFormStatus('<%= form._id %>', 'closed')">
                                                                        <i class="fas fa-power-off"></i>
                                                                    </button>
                                                                <% } else { %>
                                                                    <button class="btn btn-sm btn-success" onclick="toggleFormStatus('<%= form._id %>', 'active')">
                                                                        <i class="fas fa-power-off"></i>
                                                                    </button>
                                                                <% } %>
                                    
                                                                <button class="btn btn-sm btn-info" onclick="viewForm('<%= form._id %>')">
                                                                    <i class="fas fa-eye"></i>
                                                                </button>
                                                            </div>
                                                        </td>
                                                    </tr>
                                                <% }); %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="4" class="text-center">No forms available</td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>
                                    
                                </div>
                                <div class="d-flex justify-content-between mt-3">
                                    <a href="/admin/assign-forms" class="btn btn-outline-primary">Assign Forms</a>
                                    <a href="/admin/Total-Forms" class="btn btn-outline-secondary">View All Forms</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /.container-fluid -->
        </div>
        <!-- Data Visualization -->
        <!-- Data Visualization Section -->
       <!-- Tab Navigation for different form types -->
       ```html
       <div class="mt-4 mb-6">
           <div class="flex space-x-1 bg-gray-100 p-1 rounded-xl">
             <a href="/admin/adminHome?formType=Academic<%= subjectFilter ? '&subject=' + subjectFilter : '' %>" 
               class="flex-1 text-center py-2 px-4 rounded-lg <%= feedbackData.responseMetadata.currentFormType === 'Academic' ? 'bg-white shadow' : 'hover:bg-gray-200' %>">
               Academic Feedback
             </a>
             <a href="/admin/adminHome?formType=Institutional<%= subjectFilter ? '&subject=' + subjectFilter : '' %>" 
               class="flex-1 text-center py-2 px-4 rounded-lg <%= feedbackData.responseMetadata.currentFormType === 'Institutional' ? 'bg-white shadow' : 'hover:bg-gray-200' %>">
               Institutional Feedback
             </a>
             <a href="/admin/adminHome?formType=Training<%= subjectFilter ? '&subject=' + subjectFilter : '' %>" 
               class="flex-1 text-center py-2 px-4 rounded-lg <%= feedbackData.responseMetadata.currentFormType === 'Training' ? 'bg-white shadow' : 'hover:bg-gray-200' %>">
               Training Feedback
             </a>
           </div>
         </div>
         
         <main class="flex-1 p-4 md:p-6 lg:p-10 overflow-y-auto">
           <div class="mb-6 md:mb-8">
               <h1 class="text-2xl md:text-3xl lg:text-4xl font-bold text-gray-800 text-center mt-4 md:mt-6">
                   <%= feedbackData.responseMetadata.currentFormType.toUpperCase() %> FEEDBACK VISUALIZATION
               </h1>
               <p class="text-center text-gray-600 mt-2" id="dataInfo">
                   <span id="currentFilter"><%= subjectFilter || 'All Subjects' %></span> | 
                   <span id="responseCount"><%= feedbackData.responseMetadata.totalResponses %> Responses</span>
               </p>
           </div>
           
           <!-- Faculty Selector (for Academic feedback) -->
           <% if (feedbackData.responseMetadata.currentFormType === 'Academic') { %>
           <div class="mb-6">
               <label for="facultySelect" class="block text-sm font-medium text-gray-700 mb-1">Select Faculty:</label>
               <select id="facultySelect" class="border border-gray-300 rounded-md p-2 w-full md:w-1/2 lg:w-1/3">
                   <option value="">All Faculty</option>
                   <% faculties.forEach(faculty => { %>
                       <option value="<%= faculty._id %>" <%= selectedFaculty === faculty._id.toString() ? 'selected' : '' %>><%= faculty.name %> (<%= faculty.subjects.join(', ') %>)</option>
                   <% }); %>
               </select>
           </div>
           <% } %>
           
           <!-- Charts Grid -->
           <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4 md:gap-6 lg:gap-8">
               <% if (feedbackData.responseMetadata.currentFormType === 'Academic') { %>
                   <!-- Academic Feedback Charts -->
                   <% if (Object.keys(feedbackData.sectionData).includes('Teacher Effectiveness')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Teacher Effectiveness</h3>
                       <canvas id="teacherEffectivenessChart" 
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Teacher Effectiveness'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Teacher Effectiveness'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Student Learning Experience')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Student Learning Experience</h3>
                       <canvas id="studentExperienceChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Student Learning Experience'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Student Learning Experience'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Exams and Evaluation')) { %>
                   <div class="chart-container chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Exams and Evaluation</h3>
                       <canvas id="examsEvaluationChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Exams and Evaluation'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Exams and Evaluation'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Overall Satisfaction')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Overall Satisfaction</h3>
                       <canvas id="overallSatisfactionChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Overall Satisfaction'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Overall Satisfaction'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
               <% } else if (feedbackData.responseMetadata.currentFormType === 'Institutional') { %>
                   <!-- Institutional Feedback Charts -->
                   <% if (Object.keys(feedbackData.sectionData).includes('Resources and Administration')) { %>
                   <div class="chart-container  bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Resources and Administration</h3>
                       <canvas id="resourcesAdminChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Resources and Administration'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Resources and Administration'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Curriculum Aspects')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Curriculum Aspects</h3>
                       <canvas id="curriculumAspectsChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Curriculum Aspects'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Curriculum Aspects'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Administrative Services')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Administrative Services</h3>
                       <canvas id="adminServicesChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Administrative Services'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Administrative Services'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Student Support')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Student Support</h3>
                       <canvas id="studentSupportChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Student Support'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Student Support'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Technology Resources')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Technology Resources</h3>
                       <canvas id="techResourcesChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Technology Resources'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Technology Resources'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Campus Life')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Campus Life</h3>
                       <canvas id="campusLifeChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Campus Life'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Campus Life'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
               <% } else if (feedbackData.responseMetadata.currentFormType === 'Training') { %>
                   <!-- Training Feedback Charts -->
                   <% if (Object.keys(feedbackData.sectionData).includes('Training Content')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Training Content</h3>
                       <canvas id="trainingContentChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Training Content'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Training Content'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Trainer Effectiveness')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Trainer Effectiveness</h3>
                       <canvas id="trainerEffectivenessChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Trainer Effectiveness'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Trainer Effectiveness'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Training Materials')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Training Materials</h3>
                       <canvas id="trainingMaterialsChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Training Materials'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Training Materials'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Workshop Facilities')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Workshop Facilities</h3>
                       <canvas id="workshopFacilitiesChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Workshop Facilities'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Workshop Facilities'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Practical Application')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Practical Application</h3>
                       <canvas id="practicalApplicationChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Practical Application'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Practical Application'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
                   
                   <% if (Object.keys(feedbackData.sectionData).includes('Overall Value')) { %>
                   <div class="chart-container bg-white p-3 md:p-5 rounded shadow">
                       <h3 class="text-base md:text-lg font-semibold mb-2 md:mb-4">Overall Value</h3>
                       <canvas id="overallValueChart"
                           data-labels="<%= JSON.stringify(feedbackData.sectionData['Overall Value'].labels) %>"
                           data-values="<%= JSON.stringify(feedbackData.sectionData['Overall Value'].values) %>">
                       </canvas>
                   </div>
                   <% } %>
               <% } %>
           </div>
           
           <!-- Summary Section -->
           <div class="mt-8 bg-white p-4 rounded shadow">
               <h3 class="text-lg font-semibold mb-3">Overall Averages by Section</h3>
               <div class="overflow-x-auto">
                   <table class="min-w-full divide-y divide-gray-200">
                       <thead class="bg-gray-50">
                           <tr>
                               <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Section</th>
                               <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Average Score</th>
                           </tr>
                       </thead>
                       <tbody class="bg-white divide-y divide-gray-200">
                           <% feedbackData.sectionAverages.forEach(section => { %>
                           <tr>
                               <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"><%= section.sectionTitle %></td>
                               <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                                   <div class="flex items-center">
                                       <span class="mr-2"><%= section.averageScore.toFixed(2) %></span>
                                       <div class="w-32 bg-gray-200 rounded-full h-2.5">
                                           <div class="bg-blue-600 h-2.5 rounded-full" style="width: <%= (section.averageScore/5)*100 %>%"></div>
                                       </div>
                                   </div>
                               </td>
                           </tr>
                           <% }); %>
                       </tbody>
                   </table>
               </div>
           </div>
           
           <!-- Metadata display -->
           <div class="mt-8 bg-white p-4 rounded shadow">
               <h3 class="text-lg font-semibold mb-3">Feedback Information</h3>
               <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                   <div class="bg-gray-50 p-3 rounded">
                       <p class="text-sm text-gray-500">Form Type</p>
                       <p class="font-medium" id="formType"><%= feedbackData.responseMetadata.currentFormType %></p>
                   </div>
                   <div class="bg-gray-50 p-3 rounded">
                       <p class="text-sm text-gray-500">Responses</p>
                       <p class="font-medium" id="responseCount"><%= feedbackData.responseMetadata.totalResponses %></p>
                   </div>
                   <div class="bg-gray-50 p-3 rounded">
                       <p class="text-sm text-gray-500">Last Updated</p>
                       <p class="font-medium" id="lastUpdated"><%= feedbackData.responseMetadata.lastUpdated.toLocaleString() %></p>
                   </div>
               </div>
           </div>
           
           <div class="flex justify-center mt-6 md:mt-8 lg:mt-10">
               <button id="downloadExcel"
                   class="bg-green-300 hover:bg-green-200 text-green-800 font-semibold py-2 md:py-3 px-4 md:px-6 rounded-lg shadow-md transition duration-300 ease-in-out transform hover:-translate-y-1 hover:shadow-lg flex items-center justify-center space-x-2">
                   <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none"
                       stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                       class="lucide lucide-download">
                       <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
                       <polyline points="7 10 12 15 17 10"></polyline>
                       <line x1="12" x2="12" y1="15" y2="3"></line>
                   </svg>
                   <span>Download Feedback Data</span>
               </button>
           </div>
       </main>

        <!-- Footer -->
        <%- include('partials/adminBottomNavbar') %>
        <!-- End of Footer -->
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
<!-- Bootstrap core JavaScript -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
<!-- Custom scripts -->
<script>
     // Form status filter functionality
     document.getElementById('formStatusFilter').addEventListener('change', function() {
        const status = this.value;
        const rows = document.querySelectorAll('.table tbody tr');
        
        rows.forEach(row => {
            if (status === 'all') {
                row.style.display = '';
            } else {
                const badgeText = row.querySelector('.badge').textContent.toLowerCase();
                if (badgeText === status) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            }
        });
    });
    // Function to edit form
    function editForm(formId) {
        window.location.href = `/admin/forms/${formId}/edit`;
    }
    // Function to toggle form status
    async function toggleFormStatus(formId, newStatus) {
        try {
            const response = await fetch(`/admin/forms/updateStatus/${formId}`, {
                method: "PATCH",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ status: newStatus })
            });

            const result = await response.json();
            if (result.success) {
                alert(`Form status updated to ${newStatus}`);
                location.reload(); // Refresh to show updated status
            } else {
                alert("Failed to update form status");
            }
        } catch (error) {
            console.error("Error updating form status:", error);
        }
    }
    // Function to view form
    function viewForm(formId) {
        window.location.href = `/admin/forms/view/${formId}`;
    }
    document.addEventListener('DOMContentLoaded', function() {
        // Toggle sidebar
        const toggleSidebar = document.querySelector('.toggle-sidebar');
        const sidebar = document.querySelector('.sidebar');
        const contentWrapper = document.querySelector('#content-wrapper');
        
        if (toggleSidebar) {
            toggleSidebar.addEventListener('click', function() {
                sidebar.classList.toggle('toggled');
                contentWrapper.classList.toggle('toggled');
            });
        }
        
        // Dropdown functionality
        const dropdowns = document.querySelectorAll('.dropdown-toggle');
        dropdowns.forEach(dropdown => {
            new bootstrap.Dropdown(dropdown);
        });
    });



     // Gender Preferences Chart
//     // Initialize feedback charts with data from the server
//     document.addEventListener('DOMContentLoaded', function () {
//   const chartInstances = {}; // 🔁 Track chart instances to prevent duplicates

//   const chartConfig = {
//     type: 'bar',
//     options: {
//       responsive: true,
//       maintainAspectRatio: false,
//       scales: {
//         y: {
//           beginAtZero: true,
//           max: 5,
//           ticks: {
//             stepSize: 1
//           }
//         }
//       },
//       plugins: {
//         legend: { display: false },
//         tooltip: {
//           callbacks: {
//             label: function (context) {
//               return `Average: ${context.raw.toFixed(2)}/5`;
//             }
//           }
//         }
//       }
//     }
//   };

//   function createSectionChart(sectionId, sectionData) {
//     const ctx = document.getElementById(sectionId);
//     if (!ctx) return;

//     // 🔁 Destroy existing chart if present
//     if (chartInstances[sectionId]) {
//       chartInstances[sectionId].destroy();
//     }

//     const questions = Object.keys(sectionData.questions);
//     const averages = questions.map(q => sectionData.questions[q].average);
//     const labels = questions.map(q => (q.length > 30 ? q.substring(0, 27) + '...' : q));

//     const config = {
//       ...chartConfig,
//       data: {
//         labels: labels,
//         datasets: [{
//           data: averages,
//           backgroundColor: 'rgba(54, 162, 235, 0.7)',
//           borderColor: 'rgba(54, 162, 235, 1)',
//           borderWidth: 1
//         }]
//       }
//     };

//     chartInstances[sectionId] = new Chart(ctx, config); // 🆕 Track chart
//   }

//   // 👇 Ensure data is available before attempting charts
//   const formType = document.getElementById('formType')?.textContent;
//   const feedbackData = <%- JSON.stringify(feedbackData?.sectionData || {}) %>;

//   if (feedbackData && Object.keys(feedbackData).length > 0) {
//     const sectionMap = {
//       Academic: {
//         'Course Organization': 'courseOrganizationChart',
//         'Teacher Effectiveness': 'teacherEffectivenessChart',
//         'Student Learning Experience': 'studentExperienceChart',
//         'Exams and Evaluation': 'examsEvaluationChart',
//         'General Course Questions': 'generalQuestionsChart',
//         'Tutorial & Lab Components': 'tutorialLabChart'
//       },
//       Institutional: {
//         'Campus Infrastructure': 'infrastructureChart',
//         'Administrative Services': 'adminServicesChart',
//         'Student Support': 'studentSupportChart',
//         'Technology Resources': 'techResourcesChart',
//         'Campus Life': 'campusLifeChart',
//         'Overall Experience': 'overallExpChart'
//       },
//       Training: {
//         'Training Content': 'trainingContentChart',
//         'Trainer Effectiveness': 'trainerEffectivenessChart',
//         'Training Materials': 'trainingMaterialsChart',
//         'Workshop Facilities': 'workshopFacilitiesChart',
//         'Practical Application': 'practicalApplicationChart',
//         'Overall Value': 'overallValueChart'
//       }
//     };

//     const currentSections = sectionMap[formType] || {};
//     Object.keys(currentSections).forEach(sectionTitle => {
//       if (feedbackData[sectionTitle]) {
//         createSectionChart(currentSections[sectionTitle], feedbackData[sectionTitle]);
//       }
//     });
//   }

//   // Faculty selector filter
//   const facultySelect = document.getElementById('facultySelect');
//   if (facultySelect) {
//     facultySelect.addEventListener('change', function () {
//       const facultyId = this.value;
//       const currentUrl = new URL(window.location);

//       if (facultyId) {
//         currentUrl.searchParams.set('facultyId', facultyId);
//       } else {
//         currentUrl.searchParams.delete('facultyId');
//       }

//       window.location = currentUrl.toString();
//     });
//   }

//   // Excel download handler
//   const downloadBtn = document.getElementById('downloadExcel');
//   if (downloadBtn) {
//     downloadBtn.addEventListener('click', function () {
//       const formType = document.getElementById('formType').textContent;
//       const facultyId = facultySelect ? facultySelect.value : '';
//       window.location = `/admin/download-feedback?formType=${formType}${facultyId ? '&facultyId=' + facultyId : ''}`;
//     });
//   }
// });

document.addEventListener('DOMContentLoaded', function() {
    const formType = document.getElementById('formType').textContent.trim();
    
    // Set common chart options with improved animation settings
    const chartOptions = {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
            y: {
                beginAtZero: true,
                max: 5
            }
        },
        plugins: {
            legend: {
                position: 'bottom'
            }
        },
        animation: {
            duration: 800,  // Shorter animation duration
            easing: 'easeOutQuad',  // Smoother easing function
            mode: 'fade'  // Fade in instead of growing from bottom
        }
    };
    
    // Create charts based on form type
    if (formType === 'Academic') {
        createAcademicCharts();
    } else if (formType === 'Institutional') {
        createInstitutionalCharts();
    } else if (formType === 'Training') {
        createTrainingCharts();
    }
    
    // Faculty selector for Academic feedback
    if (formType === 'Academic') {
        const facultySelect = document.getElementById('facultySelect');
        if (facultySelect) {
            facultySelect.addEventListener('change', function() {
                // Add AJAX call to filter data by faculty
                const facultyId = this.value;
                window.location.href = `/admin/adminHome?formType=Academic&faculty=${facultyId}`;
            });
        }
    }
    
    // Download Excel button
    const downloadBtn = document.getElementById('downloadExcel');
    if (downloadBtn) {
        downloadBtn.addEventListener('click', function() {
            window.location.href = `/feedback/download/${formType.toLowerCase()}`;
        });
    }
    
    // Function to get data from canvas attributes
    function getChartData(chartId) {
        const canvas = document.getElementById(chartId);
        if (!canvas) return null;
        
        try {
            const labels = JSON.parse(canvas.getAttribute('data-labels') || '[]');
            const values = JSON.parse(canvas.getAttribute('data-values') || '[]');
            
            return { labels, values };
        } catch (e) {
            console.error(`Error parsing data for ${chartId}:`, e);
            return { labels: [], values: [] };
        }
    }
    
    // Function to create Academic charts
    function createAcademicCharts() {
        // Teacher Effectiveness Chart
        if (document.getElementById('teacherEffectivenessChart')) {
            const chartData = getChartData('teacherEffectivenessChart');
            if (chartData) {
                new Chart(document.getElementById('teacherEffectivenessChart'), {
                    type: 'bar',
                    data: {
                        labels: chartData.labels,
                        datasets: [{
                            label: 'Average Rating (1-5)',
                            data: chartData.values,
                            backgroundColor: 'rgba(54, 162, 235, 0.6)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: chartOptions
                });
            }
        }
        
        // Student Learning Experience Chart
        if (document.getElementById('studentExperienceChart')) {
            const chartData = getChartData('studentExperienceChart');
            if (chartData) {
                new Chart(document.getElementById('studentExperienceChart'), {
                    type: 'radar',
                    data: {
                        labels: chartData.labels,
                        datasets: [{
                            label: 'Average Rating (1-5)',
                            data: chartData.values,
                            backgroundColor: 'rgba(255, 99, 132, 0.2)',
                            borderColor: 'rgba(255, 99, 132, 1)',
                            borderWidth: 1,
                            pointBackgroundColor: 'rgba(255, 99, 132, 1)'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            r: {
                                min: 0,
                                max: 5,
                                ticks: {
                                    stepSize: 1
                                }
                            }
                        },
                        animation: {
                            duration: 500,
                            easing: 'linear'
                        }
                    }
                });
            }
        }
        
        // Exams and Evaluation Chart
        if (document.getElementById('examsEvaluationChart')) {
            const chartData = getChartData('examsEvaluationChart');
            if (chartData) {
                new Chart(document.getElementById('examsEvaluationChart'), {
                    type: 'bar',
                    data: {
                        labels: chartData.labels,
                        datasets: [{
                            label: 'Average Rating (1-5)',
                            data: chartData.values,
                            backgroundColor: 'rgba(75, 192, 192, 0.6)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: chartOptions
                });
            }
        }
        
        // Overall Satisfaction Chart
        if (document.getElementById('overallSatisfactionChart')) {
            const chartData = getChartData('overallSatisfactionChart');
            if (chartData) {
                // For pie/doughnut charts, we need labels and count data
                // If values are average scores, we format appropriately
                
                let displayData = chartData.values;
                // If we have a response distribution for satisfaction levels
                if (chartData.labels.some(label => ['Very Satisfied', 'Satisfied', 'Neutral', 'Dissatisfied', 'Very Dissatisfied'].includes(label))) {
                    displayData = chartData.values; // Keep as is - these are counts
                } else {
                    // If we just have question averages, adapt the display
                    displayData = chartData.values;
                }
                
                new Chart(document.getElementById('overallSatisfactionChart'), {
                    type: 'doughnut',
                    data: {
                        labels: chartData.labels,
                        datasets: [{
                            data: displayData,
                            backgroundColor: [
                                'rgba(75, 192, 192, 0.6)',
                                'rgba(54, 162, 235, 0.6)',
                                'rgba(255, 206, 86, 0.6)',
                                'rgba(255, 159, 64, 0.6)',
                                'rgba(255, 99, 132, 0.6)'
                            ],
                            borderColor: [
                                'rgba(75, 192, 192, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(255, 206, 86, 1)',
                                'rgba(255, 159, 64, 1)',
                                'rgba(255, 99, 132, 1)'
                            ],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom'
                            }
                        },
                        animation: {
                            animateRotate: true,
                            animateScale: false,
                            duration: 500,
                            easing: 'easeOutCirc'
                        }
                    }
                });
            }
        }
    }
    
    // Function to create Institutional charts
    function createInstitutionalCharts() {
        // Resources and Administration Chart
        renderDynamicChart('resourcesAdminChart', 'bar', 'rgba(153, 102, 255, 0.6)', 'rgba(153, 102, 255, 1)');
        
        // Curriculum Aspects Chart
        if (document.getElementById('curriculumAspectsChart')) {
            const chartData = getChartData('curriculumAspectsChart');
            if (chartData) {
                new Chart(document.getElementById('curriculumAspectsChart'), {
                    type: 'radar',
                    data: {
                        labels: chartData.labels,
                        datasets: [{
                            label: 'Average Rating (1-5)',
                            data: chartData.values,
                            backgroundColor: 'rgba(255, 159, 64, 0.2)',
                            borderColor: 'rgba(255, 159, 64, 1)',
                            borderWidth: 1,
                            pointBackgroundColor: 'rgba(255, 159, 64, 1)'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            r: {
                                min: 0,
                                max: 5,
                                ticks: {
                                    stepSize: 1
                                }
                            }
                        },
                        animation: {
                            duration: 500,
                            easing: 'linear'
                        }
                    }
                });
            }
        }
        
        // Render other charts
        renderDynamicChart('adminServicesChart', 'bar', 'rgba(54, 162, 235, 0.6)', 'rgba(54, 162, 235, 1)');
        renderDynamicChart('studentSupportChart', 'bar', 'rgba(75, 192, 192, 0.6)', 'rgba(75, 192, 192, 1)');
        renderDynamicChart('techResourcesChart', 'bar', 'rgba(153, 102, 255, 0.6)', 'rgba(153, 102, 255, 1)');
        renderDynamicChart('campusLifeChart', 'bar', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 159, 64, 1)');
    }
    
    // Function to create Training charts
    function createTrainingCharts() {
        renderDynamicChart('trainingContentChart', 'bar', 'rgba(54, 162, 235, 0.6)', 'rgba(54, 162, 235, 1)');
        renderDynamicChart('trainerEffectivenessChart', 'bar', 'rgba(75, 192, 192, 0.6)', 'rgba(75, 192, 192, 1)');
        renderDynamicChart('trainingMaterialsChart', 'bar', 'rgba(153, 102, 255, 0.6)', 'rgba(153, 102, 255, 1)');
        renderDynamicChart('workshopFacilitiesChart', 'bar', 'rgba(255, 159, 64, 0.6)', 'rgba(255, 159, 64, 1)');
        renderDynamicChart('practicalApplicationChart', 'bar', 'rgba(255, 99, 132, 0.6)', 'rgba(255, 99, 132, 1)');
        renderDynamicChart('overallValueChart', 'bar', 'rgba(0, 128, 128, 0.6)', 'rgba(0, 128, 128, 1)');
    }
    
    // Helper function to render dynamic charts
    function renderDynamicChart(chartId, chartType, bgColor, borderColor) {
        const chartElement = document.getElementById(chartId);
        if (chartElement) {
            const chartData = getChartData(chartId);
            if (chartData) {
                new Chart(chartElement, {
                    type: chartType,
                    data: {
                        labels: chartData.labels,
                        datasets: [{
                            label: 'Average Rating (1-5)',
                            data: chartData.values,
                            backgroundColor: bgColor,
                            borderColor: borderColor,
                            borderWidth: 1
                        }]
                    },
                    options: chartOptions
                });
            }
        }
    }
});
</script>
</body>
</html>