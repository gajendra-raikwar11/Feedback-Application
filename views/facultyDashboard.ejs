<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Faculty Dashboard - Student Feedback</title>
    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <!-- Font Awesome -->
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css"
    />
    <!-- Custom CSS -->
    <style>
      :root {
        --primary-color: #4361ee;
        --secondary-color: #3f37c9;
        --accent-color: #ff4081;
        --text-color: #333;
        --light-gray: #eee;
        --success-color: #4caf50;
        --danger-color: #f44336;
      }

      body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        color: var(--text-color);
        background-color: #f9f9f9;
      }

      .sidebar {
        background-color: var(--primary-color);
        color: white;
        min-height: 100vh;
        position: fixed;
        top: 0;
        left: 0;
        width: 250px;
        transition: all 0.3s;
        z-index: 1000;
      }

      .content {
        margin-left: 250px;
        padding: 20px;
        transition: all 0.3s;
      }

      /* Change the sidebar behavior on mobile */
      @media (max-width: 768px) {
        .toggle-btn {
          display: block;
        }

        /* Sidebar positioning - floating overlay instead of pushing content */
        .sidebar {
          margin-left: -250px;
          z-index: 1100;
          /* Higher z-index to overlay content */
          box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);
          /* Add shadow */
        }

        .sidebar.active {
          margin-left: 0;
        }

        /* Content stays in place when sidebar opens */
        .content {
          margin-left: 0;
          transition: all 0.3s;
        }

        /* Content doesn't move but gets a blur overlay when sidebar is active */
        .content.active::before {
          content: "";
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background-color: rgba(0, 0, 0, 0.4);
          /* Dark overlay */
          backdrop-filter: blur(3px);
          /* Blur effect */
          -webkit-backdrop-filter: blur(3px);
          /* For Safari */
          z-index: 1050;
          /* Between sidebar and rest of content */
          transition: all 0.3s ease;
        }
      }

      .logo {
        padding: 20px;
        text-align: center;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      }

      .nav-item {
        padding: 10px 20px;
        cursor: pointer;
        transition: all 0.2s;
      }

      .nav-item:hover {
        background-color: rgba(255, 255, 255, 0.1);
      }

      .nav-item.active {
        background-color: rgba(255, 255, 255, 0.2);
        border-left: 4px solid var(--accent-color);
      }

      .greeting-card {
        background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
        color: white;
        border-radius: 15px;
        padding: 1.5rem;
        box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
        margin-bottom: 1.5rem;
        width: 100%;
      }
      .greeting-card h2 {
        font-weight: 700;
        margin-bottom: 0.5rem;
        font-size: calc(1.2rem + 0.6vw);
      }

      .greeting-card p {
        opacity: 0.9;
        margin-bottom: 0;
        font-size: 0.9rem;
      }
      
      @media (max-width: 992px) {
        .dashboard-container {
          padding: 1rem;
        }

        .greeting-card {
          padding: 1.25rem;
        }

        .stats-card,
        .profile-card,
        .feedback-card {
          padding: 1.25rem;
        }
      }
      @media (max-width: 768px) {
        .greeting-card h2 {
          font-size: 1.4rem;
        }

        .profile-header {
          flex-direction: column;
          text-align: center;
        }

        .profile-avatar {
          margin-right: 0;
          margin-bottom: 1rem;
        }

        .profile-details {
          grid-template-columns: 1fr;
        }

        .stats-card h3 {
          font-size: 1.3rem;
        }
      }

      .card {
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        border: none;
      }

      .card-header {
        background-color: white;
        border-bottom: 1px solid var(--light-gray);
        font-weight: 600;
        border-radius: 10px 10px 0 0 !important;
      }

      .form-card {
        transition: all 0.3s;
      }

      .form-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
      }

      .toggle-btn {
        display: none;
        position: fixed;
        top: 20px;
        left: 20px;
        z-index: 1001;
        background-color: var(--primary-color);
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
      }

      .stat-card {
        border-radius: 10px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        padding: 20px;
        text-align: center;
        transition: all 0.3s;
      }

      .stat-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 15px rgba(0, 0, 0, 0.15);
      }

      .stat-icon {
        font-size: 2.5rem;
        margin-bottom: 15px;
      }

      .stat-number {
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 5px;
      }

      .stat-title {
        font-size: 1rem;
        color: #666;
      }

      .chart-container {
        position: relative;
        margin: auto;
        height: 60vh;
        width: 100%;
      }

      @media (max-width: 768px) {
        .toggle-btn {
          display: block;
        }

        .chart-container {
          height: 40vh;
        }
      }

      .forms-count-card {
        border-left: 5px solid var(--primary-color);
      }

      .sidebar-close-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: transparent;
        border: none;
        font-size: 24px;
        cursor: pointer;
        padding: 5px 10px;
        color: white;
        display: none;
      }

      @media (max-width: 768px) {
        .sidebar-close-btn {
          display: block;
        }
      }

      @media (max-width: 576px) {
        .mobile-left-shift {
          margin-left: 40px;
        }
      }
    </style>
  </head>

  <body>
    <!-- Mobile Toggle Button -->
    <button class="toggle-btn mb-2" id="sidebarToggle">
      <i class="fas fa-bars"></i>
    </button>

    <!-- Sidebar -->
    <%- include('partials/facultySideNavbar', {activePage: 'dashboard' }) %>

    <!-- Main Content -->
    <div class="content" id="content">
      <div class="container-fluid">
        <div class="row mb-4">
          
          <!-- Greeting Section -->
          <div class="greeting-card ">
            <h2>
              <% const hour = new Date().getHours(); let greeting; if (hour <
              12) greeting = "Good Morning"; else if (hour < 18) greeting =
              "Good Afternoon"; else greeting = "Good Evening"; %> <%= greeting
              %>, <%= faculty.name %>!
            </h2>
            <p>
              <i class="far fa-calendar-alt me-2"></i> <%= new
              Date().toLocaleDateString('en-US', { weekday: 'long', year:
              'numeric', month: 'long', day: 'numeric' }) %>
            </p>
          </div>
        </div>
          
        <!-- Statistics Cards -->
        <div class="row mb-4">
          <div class="col-md-3 mb-3">
            <div class="stat-card bg-white">
              <div class="stat-icon text-primary">
                <i class="fas fa-users"></i>
              </div>
              <div class="stat-number" id="totalStudentCount">
                <% let StudentCount = 0; studentsDetails.forEach(student => {
                  if(String(facultyDetails.sections).includes(student.section)) {
                    StudentCount++; } }); %> <%= StudentCount %>
                  </div>
                  <div class="stat-title">Total Students</div>
                </div>
              </div>
              <div class="col-md-3 mb-3">
                <div class="stat-card bg-white">
                  <div class="stat-icon text-info">
                    <i class="fas fa-clipboard-list"></i>
                  </div>
                  <div class="stat-number" id="assignedFormsCount">
                    <% let assignedFormsCount = 0; forms.forEach((form) => {
                    assignedFormsCount++; }); %> <%= assignedFormsCount %>
                  </div>
                  <div class="stat-title">Assigned Forms</div>
                </div>
              </div>
          <div class="col-md-3 mb-3">
            <div class="stat-card bg-white">
              <div class="stat-icon text-success">
                <i class="fas fa-check-circle"></i>
              </div>
              <div class="stat-number" id="feedbackSubmittedCount">
                <% let  SubmittedFormCount = 0; %>
                  <% feedbackRes.forEach((feedback) => { %>
                    <% if ( facultyDetails._id.toString() === feedback.facultyID.toString() ) { %>
                      <% SubmittedFormCount++; %>
                    <% } %>
                  <% }); %>
                  <%= SubmittedFormCount %>
              </div>
              <div class="stat-title">Feedback Submitted</div>
            </div>
          </div>
          <div class="col-md-3 mb-3">
            <div class="stat-card bg-white">
              <div class="stat-icon text-warning">
                <i class="fas fa-clock"></i>
              </div>
              <div class="stat-number" id="feedbackPendingCount">
                <%= assignedFormsCount - SubmittedFormCount %>
              </div>
              <div class="stat-title">Feedback Pending</div>
            </div>
          </div>
        </div>

        
        <!-- Feedback Completion Chart -->
        <div class="row">
          <div class="col-lg-8 mb-4">
            <div class="card">
              <div class="card-header">
                <span>Student Feedback Completion Status</span>
              </div>
              <div class="card-body">
                <div class="chart-container">
                  <canvas id="feedbackCompletionChart"></canvas>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- forms count cards -->
        <div class="row mb-4">
          <div class="col-12 col-md-4 mb-3">
            <div class="stat-card bg-white">
              <div class="stat-icon text-warning">
                <i class="fas fa-building"></i>
              </div>
              <div class="stat-number" id="institutionalFormCount">
                <% let filteredInstituteForm = 0; forms.forEach((form) => { if
                (form.formType === 'Institutional') { filteredInstituteForm++; }
                }); %> <%= filteredInstituteForm %>
              </div>
              <div class="stat-title">Institutional Forms</div>
            </div>
          </div>
          <div class="col-12 col-md-4 mb-3">
            <div class="stat-card bg-white">
              <div class="stat-icon text-warning">
                <i class="fas fa-book"></i>
              </div>
              <div class="stat-number" id="academicFormCount">
                <% let filteredAcademicForm = 0; forms.forEach((form) => { if
                (form.formType === 'Academic') { filteredAcademicForm++; } });
                %> <%= filteredAcademicForm %>
              </div>
              <div class="stat-title">Academic Forms</div>
            </div>
          </div>
          <div class="col-12 col-md-4 mb-3">
            <div class="stat-card bg-white">
              <div class="stat-icon text-warning">
                <i class="fas fa-graduation-cap"></i>
              </div>
              <div class="stat-number" id="trainingFormCount">
                <% let filteredTrainingForm = 0; forms.forEach((form) => { if
                (form.formType === 'Training') { filteredTrainingForm++; } });
                %> <%= filteredTrainingForm %>
              </div>
              <div class="stat-title">Training Forms</div>
            </div>
          </div>
        </div>
        
        <!-- Forms Progress Section -->
        <div class="row mt-4">
          <div class="col-12">
            <div class="card shadow-sm border-0 rounded-lg">
              <div class="card-header bg-white py-3 border-bottom">
                <h5 class="card-title mb-0 fw-bold">
                  Form's Record 
                </h5>
              </div>
              <div
                class="card-body p-0"
                style="max-height: 430px; overflow-y: auto"
              >
              <div class="table-responsive">
                  <table class="table table-hover mb-0">
                    <thead class="table-light">
                      <tr>
                        <th class="px-4 py-3">Form Title</th>
                        <th class="px-4 py-3">Type</th>
                        <th class="px-4 py-3">Deadline</th>
                      </tr>
                    </thead>
                    <tbody id="formsProgressTable">
                      <% if (forms.length === 0) { %>
                      <tr>
                        <td colspan="3" class="text-center text-muted py-4">
                          <i class="far fa-clipboard me-2"></i> No forms to
                          display
                        </td>
                      </tr>
                      <% } else { %> <% forms.forEach((form) => { %>
                      <tr>
                        <td class="px-4 py-3">
                          <div class="d-flex align-items-center">
                            <div class="form-icon me-3">
                              <% if (form.formType === 'Institutional') { %>
                              <span
                                class="badge bg-primary-subtle text-primary rounded-circle p-2"
                              >
                                <i class="fas fa-building"></i>
                              </span>
                              <% } else if (form.formType === 'Training') { %>
                              <span
                                class="badge bg-success-subtle text-success rounded-circle p-2"
                              >
                                <i class="fas fa-graduation-cap"></i>
                              </span>
                              <% } else if (form.formType === 'Academic') { %>
                              <span
                                class="badge bg-info-subtle text-info rounded-circle p-2"
                              >
                                <i class="fas fa-book"></i>
                              </span>
                              <% } %>
                            </div>
                            <div>
                              <h6 class="mb-0"><%= form.title %></h6>
                            </div>
                          </div>
                        </td>
                        <td class="px-4 py-3">
                          <span
                            class="badge <%= form.formType === 'Institutional' ? 'bg-primary' : form.formType === 'Training' ? 'bg-success' : 'bg-info' %> rounded-pill px-3 py-2"
                          >
                            <%= form.formType %>
                          </span>
                        </td>
                        <td class="px-4 py-3">
                          <% const deadline = new Date(form.deadline); %> <%=
                          deadline.toLocaleString('en-GB', { day: '2-digit',
                          month: 'short', year: 'numeric', hour: '2-digit',
                          minute: '2-digit', hour12: true }) %>
                        </td>
                      </tr>
                      <% }) %> <% } %>
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
        <!-- Footer -->
        <%- include('partials/adminBottomNavbar') %>
        <!-- End of Footer -->
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>

    <script>
          // SECTION 1: DATA MODELS AND STATE MANAGEMENT
          
          // DOM Elements
          const sidebarToggle = document.getElementById("sidebarToggle");
          const sidebarClose = document.getElementById("sidebarClose");
          const sidebar = document.getElementById("sidebar");
          const content = document.getElementById("content");
          const feedbackSubmittedCount = document.getElementById("feedbackSubmittedCount");
          const feedbackPendingCount = document.getElementById("feedbackPendingCount");
          
          // Sample data for chart
          const feedbackData = {
            submitted: feedbackSubmittedCount.textContent,
            pending: feedbackPendingCount.textContent,
          };

          // Chart
          let feedbackCompletionChart;
          
          // SECTION 2: INITIALIZATION AND EVENT HANDLING
          // Initialize the dashboard
          function initDashboard() {
            initCharts();
            setupEventListeners();
          }

          // Setup event listeners
          function setupEventListeners() {
            // Sidebar toggle
            sidebarToggle.addEventListener("click", toggleSidebar);
            if (sidebarClose) {
              sidebarClose.addEventListener("click", toggleSidebar);
            }

            // Handle click outside sidebar to close it on mobile
            content.addEventListener("click", function (e) {
              if (
                window.innerWidth <= 768 &&
                sidebar.classList.contains("active")
              ) {
                toggleSidebar();
              }
            });
          }

          // Toggle sidebar
          function toggleSidebar() {
            sidebar.classList.toggle("active");
            content.classList.toggle("active");
          }

          // SECTION 3: CHARTS
          // Initialize charts
          function initCharts() {
            const ctx = document
              .getElementById("feedbackCompletionChart")
              .getContext("2d");

            // Initial chart setup with data
            feedbackCompletionChart = new Chart(ctx, {
              type: "bar",
              data: {
                labels: ["Feedback Status"],
                datasets: [
                  {
                    label: "Submitted",
                    data: [feedbackData.submitted],
                    backgroundColor: "rgba(76, 175, 80, 0.7)",
                    borderColor: "rgba(76, 175, 80, 1)",
                    borderWidth: 1,
                  },
                  {
                    label: "Pending",
                    data: [feedbackData.pending],
                    backgroundColor: "rgba(244, 67, 54, 0.7)",
                    borderColor: "rgba(244, 67, 54, 1)",
                    borderWidth: 1,
                  },
                ],
              },
              options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                  x: {
                    stacked: true,
                  },
                  y: {
                    stacked: true,
                    beginAtZero: true,
                  },
                },
                plugins: {
                  title: {
                    display: true,
                    text: "Student Feedback Completion Status",
                    font: {
                      size: 16,
                    },
                  },
                  legend: {
                    position: "top",
                  },
                },
              },
            });
          }

          // Initialize the dashboard when the page loads
          document.addEventListener("DOMContentLoaded", initDashboard);
    </script>
  </body>
</html>

<!-- is ejs me jha forms ke card hai wha pe useable items ka use kro jisse form show ho and list of students bhi show kro jese hai or attendance ki jgah N/A rkho and feedbcak analytics jesa work karr rha hai same bese hi data pe work krabbao dynamicaaly me me aapko bta du mere forms ka data FeedbackForm se and student ka data Student model se aa rha hai  or is page me excel down load bhi lhaao  ikk feedback analytics me jha faculty uske assigned form ka feedback dekh skhe mannualy or bulk students  and ikk excell  student table me rkho jha se faculty unhe filter krke us filtered data ki excel down load kr ske.
ye sbh dynamically kro. -->
